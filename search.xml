<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[[Linux] Linux用户管理]]></title>
      <url>https://blog.coder4j.cn/2018/06/20/Linux-Linux%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/</url>
      <content type="html"><![CDATA[<h4 id="添加用户"><a href="#添加用户" class="headerlink" title="添加用户"></a>添加用户</h4><pre class="line-numbers language-shell"><code class="language-shell">useradd 用户名称
adduser 用户名称
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p><a href="https://my.oschina.net/lyp82nlf/blog/477319" target="_blank" rel="external">Linux添加新用户命令：useradd 与adduser的区别</a></p>
<h4 id="设置用户密码"><a href="#设置用户密码" class="headerlink" title="设置用户密码"></a>设置用户密码</h4><pre class="line-numbers language-shell"><code class="language-shell">passwd 用户名称
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h4><pre class="line-numbers language-shell"><code class="language-shell">userdel 用户名称
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="常见问题："><a href="#常见问题：" class="headerlink" title="常见问题："></a>常见问题：</h4><h5 id="添加后并设置密码仍无法登录"><a href="#添加后并设置密码仍无法登录" class="headerlink" title="添加后并设置密码仍无法登录?"></a>添加后并设置密码仍无法登录?</h5><blockquote>
<p>查看 /etc/ssh/sshd_config 文件中是否允许登录，更多无法登录问题 <a href="http://lakemoonstar.iteye.com/blog/1471532" target="_blank" rel="external">root 帐户无法登陆解决办法</a></p>
<h5 id="修改了-etc-ssh-sshd-config仍然无效"><a href="#修改了-etc-ssh-sshd-config仍然无效" class="headerlink" title="修改了/etc/ssh/sshd_config仍然无效?"></a>修改了/etc/ssh/sshd_config仍然无效?</h5><p>要更新配置，不能直接使用source xxx,要重启ssh服务，使用<code>service sshd restart</code></p>
</blockquote>
<h4 id="相关博客"><a href="#相关博客" class="headerlink" title="相关博客"></a>相关博客</h4><p><a href="https://blog.csdn.net/beitiandijun/article/details/41678251" target="_blank" rel="external">linux用户管理（1）—-创建用户（adduser和useradd）和删除用户（userdel）</a></p>
<p>本文地址 <a href="https://blog.coder4j.cn/2018/06/20/Linux-Linux用户管理/">https://blog.coder4j.cn/2018/06/20/Linux-Linux用户管理/</a> </p>
]]></content>
      
        
        <tags>
            
            <tag> linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[[问题集] mysql 数据库存储表情]]></title>
      <url>https://blog.coder4j.cn/2018/05/15/%E9%97%AE%E9%A2%98%E9%9B%86-mysql-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%98%E5%82%A8%E8%A1%A8%E6%83%85/</url>
      <content type="html"><![CDATA[<h4 id="问题出现原因"><a href="#问题出现原因" class="headerlink" title="问题出现原因"></a>问题出现原因</h4><blockquote>
<p>Emoji表情符号为4个字节的字符，而 utf8 字符集只支持1-3个字节的字符，导致无法写入数据库。  </p>
</blockquote>
<h4 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h4><ul>
<li>语言<ul>
<li>java</li>
</ul>
</li>
<li>数据库连接池<ul>
<li>druid</li>
</ul>
</li>
<li>数据库<ul>
<li>mysql</li>
</ul>
</li>
<li>持久性框架<ul>
<li>mybatis</li>
</ul>
</li>
</ul>
<h4 id="数据库修改"><a href="#数据库修改" class="headerlink" title="数据库修改"></a>数据库修改</h4><ul>
<li>修改数据库字符集character-set-server=utf8mb4 重启数据库生效 </li>
</ul>
<h4 id="代码修改"><a href="#代码修改" class="headerlink" title="代码修改"></a>代码修改</h4><ul>
<li>druid 配置文件修改</li>
</ul>
<pre class="line-numbers language-xml"><code class="language-xml">     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>connectionInitSqls<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>set names utf8mb4;<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>本文地址 <a href="https://blog.coder4j.cn/2018/05/15/问题集-mysql-数据库存储表情/">https://blog.coder4j.cn/2018/05/15/问题集-mysql-数据库存储表情/</a> </p>
]]></content>
      
        <categories>
            
            <category> 问题 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 问题 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[[转] 有没有安全的工作？]]></title>
      <url>https://blog.coder4j.cn/2018/04/02/%E8%BD%AC-%E6%9C%89%E6%B2%A1%E6%9C%89%E5%AE%89%E5%85%A8%E7%9A%84%E5%B7%A5%E4%BD%9C%EF%BC%9F/</url>
      <content type="html"><![CDATA[<blockquote>
<p>本文由 <a href="http://ksria.com/simpread/" target="_blank" rel="external">简悦 SimpRead</a> 转码， 原文地址 <a href="http://www.ruanyifeng.com/blog/2015/12/safe-job.html" target="_blank" rel="external">http://www.ruanyifeng.com/blog/2015/12/safe-job.html</a></p>
</blockquote>
<p>如果你经常使用互联网，可能知道有一种东西叫做 Flash。</p>
<p><img src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015121501.jpg" alt=""></p>
<p>它是一种软件，用来制作网页游戏、动画，以及视频播放器。只要观看网络视频，基本都会用到它。</p>
<p>七八年前，它是最热门的互联网技术之一。如果不安装 Flash，很多网站根本打不开。那时还流行用它制作动画，随便一个作品，就有几十万、上百万的浏览量。电视台甚至开辟栏目，播放网上流行的 Flash 动画。各大互联网公司都有专门的 Flash 工程师，还是属于那种比较抢手、收入较高的工程师。我记得那个时候，社会上也有大量的 Flash 培训班，它们的招生广告都写着保证就业。</p>
<p><img src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015121502.jpg" alt=""></p>
<p>后来，Flash 就不行了。2010 年，乔布斯宣布，苹果手机不会使用 Flash，因为影响手机性能。再后来，新的技术兴起，它就开始没落了。上个月，BBC 发表一篇报道，名字就叫<a href="http://www.bbc.com/news/technology-34799790" target="_blank" rel="external">《Flash 还能活多久？》</a>。话音刚落，一周后，这项技术的拥有者 Adobe 公司<a href="http://arstechnica.com/information-technology/2015/12/adobe-to-kill-off-flash-in-januarys-creative-cloud-update/" target="_blank" rel="external">宣布</a>，放弃 Flash 这个名字，软件将<a href="http://www.zdnet.com/article/adobe-renames-flash-professional-to-animate-pivots-to-html5/" target="_blank" rel="external">重新定位</a>，只用来制作动画。</p>
<p>说了这么多，我并不是感叹 Flash 这项技术的没落，这也是很正常的事，而是感叹那些从事 Flash 开发的工程师，他们该怎么办呢？你在一个领域钻研多年，都成了专家，突然之间那个领域过时了，你的所学所长没人需要了，那将是怎样的处境？</p>
<p>那些年里，我在上海遇见过一个朋友。他开了一家软件公司，专门面向海外市场开发 Flash 游戏。公司不大，十几个人，那时正是最好的年景，每个月都有几十万、甚至上百万人民币进账，看上去前景一片大好。可是，谁能想到 Flash 技术突然就会不行了呢？开始时，公司还能维持，后来手机游戏起来了，Flash 游戏的市场顿时萎缩。我见过他的招聘广告，改招手机游戏的开发者。再后来，就再没听到过他的消息。</p>
<p>当一种技术消亡的时候，与它相关的工作岗位也就消亡了。这种事情在技术行业特别多，因为技术的升级换代太快了。</p>
<p><img src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015121503.jpg" alt=""></p>
<p>我再举一个例子。苹果手机出现之前，最流行的手机都使用 Nokia 公司开发的 “塞班” 操作系统。你可能还记得，它的典型标志就是 “九宫格” 菜单。那时，塞班工程师也是非常抢手的，彻底掌握它那一套开发技术，我估计至少要一两年时间。后来，智能手机流行，塞班一败涂地。2010 年，诺基亚宣布放弃塞班，改用微软的操作系统。再后来，Nokia 自己也没了，所有手机工程师都遣散了。我知道，Nokia 中国有一个资深工程师，选择重进大学去读 MBA 学位。</p>
<p><img src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015121504.jpg" alt=""></p>
<p>试想一下，你花了多年的心血，孜孜不倦地投入和练习，终于掌握了一门赖以谋生的手艺，还进入了世界排名第一位的通信业跨国公司。就在你觉得人生终于有一点安全感的时候，一切就变了，几年之间，曾经的巨无霸土崩瓦解，不仅你的职位没了，更可怕的是，以前的产品已经没人用了，全世界现在不生产任何塞班设备。你的手艺的价值变成了零。</p>
<p>有人说，可以再学习、然后重新就业啊，塞班不行了，可以学习苹果手机开发。没错，说得完全正确。但是，你以前的积累没了，需要从零开始。跟现在刚刚走出校门的学生，站在同一条起跑线上，学习同样的东西。说实话，虽然你有几年开发经验，但很可能并没有那些 20 岁的年轻人学得快。在一个高速变化的行业，经验有时候不是帮助，而是障碍，因为以前的那套行不通了。退一步说，就算你重新学习了，但苹果手机的开发也在变，你得不停地追赶新东西 。一个人的人生，能经受得起多少次从零开始呢？</p>
<p>“终身学习” 这个词完全没错，但是想通过 “终身学习” 保持职业竞争力，我觉得不太可能。</p>
<p>程序员，乃至其他很多技术岗位，其实是青春饭。只有底层的技术，还有一些稳定性，越接近应用层，技术的升级换代就越快。你学会一门技术，然后吃上三十年，这种事情越来越少见了。更常见的是，几年以后，你会的东西就淘汰了，你被迫重新学习新东西，或者重新就业。</p>
<p>为什么中国很少见 35 岁以上的程序员？因为他们上学时学习的东西都淘汰了，必须和年轻人一起学习新技术。你很难比年轻人更有竞争力，其中最关键的是，雇佣刚走出校门的学生，比雇佣你便宜得多。</p>
<p>其他行业的升级换代，不如技术行业那么夸张和激进。职业的安全感可以保持得更久一些，但远不是高枕无忧。技术正在取代人力劳动，比如财务会计这样的行业，随着电子支付的兴起，将来肯定不会需要这么多财务人员。”互联网 +” 从某个方面说，就是使用互联网技术取代一部分人力，更便宜地服务更多的顾客。</p>
<p>回到本文的题目，世界上有没有安全的工作？应该是有的吧，但真的不多。公务员可能比较安全，因为这个职业改变得比较缓慢，而且没有技术升级的压力。医生和律师，也比较安全，因为对于这些行业，经验很重要，但技术正在把它们的成本降下来。厨师和物流，也是比较安全的行业，因为技术再进步，也总需要人来做饭和送货，但是它们是纯粹的体力劳动，没有进入门槛，供给非常大，想拿到高工资不容易。</p>
<p>最终来说，人类社会的就业形态正在发生深刻的改变，”终生职业” 越来越少了。每个人都应该尽早打算，如果明天你的职业消失了，你该怎么办？</p>
<p>[说明] 原文发表在<a href="http://culture.caixin.com/2015-12-11/100885728.html" target="_blank" rel="external">《财新周刊》</a>（2015 年 12 月 11 日）的专栏。</p>
<p>本文地址 <a href="https://blog.coder4j.cn/2018/04/02/转-有没有安全的工作？/">https://blog.coder4j.cn/2018/04/02/转-有没有安全的工作？/</a> </p>
]]></content>
      
        <categories>
            
            <category> 转载 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 转载 </tag>
            
            <tag> 职业道路 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[[转] Java 8 开发的 4 大顶级技巧]]></title>
      <url>https://blog.coder4j.cn/2018/02/26/%E8%BD%AC-Java-8-%E5%BC%80%E5%8F%91%E7%9A%84-4-%E5%A4%A7%E9%A1%B6%E7%BA%A7%E6%8A%80%E5%B7%A7/</url>
      <content type="html"><![CDATA[<blockquote>
<p>本文由 <a href="http://ksria.com/simpread/" target="_blank" rel="external">简悦 SimpRead</a> 转码， 原文地址 <a href="http://www.importnew.com/22417.html" target="_blank" rel="external">http://www.importnew.com/22417.html</a> 译文出处： <a href="https://www.evget.com/article/2016/8/10/24674.html" target="_blank" rel="external">Elyn</a>   原文出处：<a href="https://dzone.com/articles/java-8-top-tips" target="_blank" rel="external">Java 8 Top Tips</a></p>
</blockquote>
<p>我使用 Java 8 编码已经有些年头，既用于新的应用程序，也用来迁移现有的应用，感觉是时候写一些我发现的非常有用的 “最佳实践”。我个人并不喜欢“最佳实践” 这个说法，因为它意味着 “一刀切” 的解决方案，而编码不可能是这样的工作方式——我们需要亲自去发现什么样的解决方案才是有效的。但是我发现了一些 Java 8 代码中可以帮助我们的一些选择，让我们一起来看看吧。</p>
<h3 id="1-Optional"><a href="#1-Optional" class="headerlink" title="1.Optional"></a><strong>1.Optional</strong></h3><p>Optional 是一个严重被低估的功能，并且有潜力删除很多困扰我们的 NullPointerExceptions。这在代码边界中（要么是正在使用的 API，要么是正在暴露的 API）特别有用，因为它允许你和你的调用代码来推理所期待的东西。</p>
<p>然而，不加思考和设计就应用 Optional 可能会导致影响大量的类，并可能导致可读性更差。下面是一些关于如何高效使用 Optional 的技巧。</p>
<h4 id="Optional-应该只用于返回类型"><a href="#Optional-应该只用于返回类型" class="headerlink" title="Optional 应该只用于返回类型"></a><strong>Optional 应该只用于返回类型</strong></h4><p>…… 不是参数，也不是字段。幸运的是，IntelliJ IDEA 的让你打开检查来查看是是否遵循这些建议。</p>
<p><img src="http://image.evget.com/images/article/2016/java81.png" alt=""></p>
<p>Optional 值应在遇到它们的地方中处理。IntelliJ IDEA 的建议会防止代码 Optional 泄漏，所以请记得在你发现 Optional 的地方处理它，迅速采取行动。</p>
<p><img src="http://image.evget.com/images/article/2016/java82.png" alt=""></p>
<h4 id="不应该简单调用-get"><a href="#不应该简单调用-get" class="headerlink" title="不应该简单调用 get()"></a><strong>不应该简单调用 get()</strong></h4><p>Optional 的功能是表达这个值可能是空的，并让你应对这种情况。因此，在对它做任何事情之前一定要检查是否有一个值。只是简单得调用 get() 而不先检查 isPresent() 在某些时候可能会导致空指针。幸运的是，IntelliJ IDEA 也有检查可以提醒你这一点。</p>
<p><img src="http://image.evget.com/images/article/2016/java83.png" alt=""></p>
<h4 id="可能有更优雅的方式"><a href="#可能有更优雅的方式" class="headerlink" title="可能有更优雅的方式"></a><strong>可能有更优雅的方式</strong></h4><p>结合了 get() 的 isPresent() 当然会很赞…</p>
<p><img src="http://image.evget.com/images/article/2016/java84.png" alt=""></p>
<p>…… 但也有更优雅的解决方案。你可以使用 orElse 在万一是空值的情况下给一个替代方案。</p>
<p><img src="http://image.evget.com/images/article/2016/java85.png" alt=""></p>
<p>…… 或者你可以使用 orElseGet 说明在值为空的情况下调用哪个方法。这似乎与上面的例子相同，但 supplier 方法将只在需要的时候调用，因此，如果这是一种昂贵的方法，那么使用 lambda 会有更佳性能。</p>
<p><img src="http://image.evget.com/images/article/2016/java86.png" alt=""></p>
<h3 id="2-使用-Lambda-表达式"><a href="#2-使用-Lambda-表达式" class="headerlink" title="2. 使用 Lambda 表达式"></a><strong>2. 使用 Lambda 表达式</strong></h3><p>Lambda 表达式是 Java 8 的主要特点之一。即使你还没有使用 Java 8，你现在可能已经对它们有了基本的了解。它们是用 Java 编程的一种新的方式，并且什么是 “最佳实践” 还不明显。下面是我喜欢遵循的一些指引。</p>
<h4 id="保持简短"><a href="#保持简短" class="headerlink" title="保持简短"></a><strong>保持简短</strong></h4><p>函数式程序员与较长的 lambda 表达式相处会更愉快，但那些淫浸于 Java 多年的人会发现保持 lambda 表达式为区区几行代码更容易。你甚至可能更愿意将其限制到一行代码，并且你可以轻松<a href="http://www.amazon.cn/gp/product/B003BY6PLK/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;tag=importnew-23&amp;linkCode=as2&amp;camp=536&amp;creative=3200&amp;creativeASIN=B003BY6PLK" title="重构" target="_blank" rel="external">重构</a>较长的表达式为一个方法。</p>
<p><img src="http://image.evget.com/images/article/2016/java87.png" alt=""></p>
<p>这些甚至可能会成为方法引用。方法引用一开始会觉得有点陌生，但实际上坚持方法引用是有价值的，因为它们在某些情况下有助于可读性，后面我会讨论到这一点。</p>
<p><img src="http://image.evget.com/images/article/2016/java88.png" alt=""></p>
<h4 id="明确"><a href="#明确" class="headerlink" title="明确"></a><strong>明确</strong></h4><p>类型信息缺少 lambda 表达式，所以你可能会觉得包含类型信息用于参数会很有用。</p>
<p><img src="http://image.evget.com/images/article/2016/java899.png" alt=""></p>
<p>正如你所见，这回变得相当笨拙。所以我更喜欢给参数取一个有用的名字。当然，不管你有没有这么做，IntelliJ IDEA 可以让你看到参数得类型信息。</p>
<p><img src="http://image.evget.com/images/article/2016/java89.png" alt=""></p>
<p>甚至是 lambda 所代表的函数式接口：</p>
<p><img src="http://image.evget.com/images/article/2016/java810.png" alt=""></p>
<h3 id="3-针对-Lambda-表达式设计"><a href="#3-针对-Lambda-表达式设计" class="headerlink" title="3. 针对 Lambda 表达式设计"></a><strong>3. 针对 Lambda 表达式设计</strong></h3><p>我认为 lambda 表达式有点像泛型——和泛型一起，我们经常使用它们（例如，添加类型信息到 List&lt;&gt;），但最好我们可以设计一种方法或一个具有泛型类型（例如 Person&lt; T&gt;）的类。同样的，当使用类似于 Streams API 的东西时，我们会传递 lambda 表达式，但更好的是创造一个需要 lambda 参数的方法。</p>
<p>但是，如果你发现自己处于这类情况下，下面有一些超棒的技巧。</p>
<h4 id="IntelliJ-IDEA-可以帮你引进函数式参数"><a href="#IntelliJ-IDEA-可以帮你引进函数式参数" class="headerlink" title="IntelliJ IDEA 可以帮你引进函数式参数"></a><strong>IntelliJ IDEA 可以帮你引进函数式参数</strong></h4><p>这让你可以在有人将传递一个 lambda 而非 Object 的地方创建一个参数。此功能的好处是，它表明，现有函数式接口匹配规格说明。</p>
<p><img src="http://image.evget.com/images/article/2016/java811.png" alt=""></p>
<p>这会导致…</p>
<h4 id="使用现有的函数式接口"><a href="#使用现有的函数式接口" class="headerlink" title="使用现有的函数式接口"></a><strong>使用现有的函数式接口</strong></h4><p>随着开发人员越来越熟悉 Java 8 代码，我们就能知道当使用如 Supplier 和 Consumer 的接口时，会发生什么，以及创建一个本地的 ErrorMessageCreator（举个例子）可能会造成混乱，而且浪费。看看这个函数包了解一下哪些已经是可用的。</p>
<h4 id="添加-FunctionalInterface-到函数式接口"><a href="#添加-FunctionalInterface-到函数式接口" class="headerlink" title="添加 @FunctionalInterface 到函数式接口"></a><strong>添加 @FunctionalInterface 到函数式接口</strong></h4><p>如果你确实需要创建自己的函数式接口，那么就这样用此注释标记。这似乎没有太大的作用，但 IntelliJ IDEA 会告诉你，在你的接口不能匹配用于函数式接口的异常的时候。当你没有指定要覆盖的方法时，它会标志：</p>
<p><img src="http://image.evget.com/images/article/2016/java812.png" alt=""></p>
<p>当你指定了太多方法的时候，它会标志：</p>
<p><img src="http://image.evget.com/images/article/2016/java813.png" alt=""></p>
<p>并且如果你应用它到一个类而不是接口时，它会警告你：</p>
<p><img src="http://image.evget.com/images/article/2016/java814.png" alt=""></p>
<p>lambda 表达式可用于带有一个单一抽象方法的任何接口，但它们不能用于符合相同标准的抽象类。似乎不合逻辑，但就是这样。</p>
<h3 id="4-Stream"><a href="#4-Stream" class="headerlink" title="4.Stream"></a><strong>4.Stream</strong></h3><p>Stream API 是 Java 8 另一个大特点，并且我认为我们还真的不知道这对我们的编码方式会产生多大的改变。下面是我发现的一些有用的东西</p>
<h4 id="排队点操作符"><a href="#排队点操作符" class="headerlink" title="排队点操作符"></a><strong>排队点操作符</strong></h4><p>我个人更喜欢排队我的流操作。当然，你没有必要这样，当我发现这样做对我有帮助：</p>
<ul>
<li>一目了然地看到我有哪些操作</li>
<li>调试更容易（虽然 IntelliJ IDEA 确实提供了对一行中的任意多个 lambda 表达式设置断点的能力，但是拆分到不同的行会变得更简单）</li>
<li>当我测试东西的时候注释操作</li>
<li>轻松插入 peek() 用于调试或测试</li>
</ul>
<p><img src="http://image.evget.com/images/article/2016/java815.png" alt=""></p>
<p>此外，在我看来，它更整洁。如果我们按照这个模式，在减少代码行数方面我们并没有增加很多。</p>
<p>你可能需要调整格式设置以排列点操作符。</p>
<p><img src="http://image.evget.com/images/article/2016/java816.png" alt=""></p>
<h4 id="使用方法引用"><a href="#使用方法引用" class="headerlink" title="使用方法引用"></a><strong>使用方法引用</strong></h4><p>是的，确实需要一段时间来适应这个奇怪的语法。但是，如果使用得当，它确实可以增加可读性。请看：</p>
<p><img src="http://image.evget.com/images/article/2016/java817.png" alt=""></p>
<p>与（相对）新的 Objects 类上的辅助方法相比较：</p>
<p><img src="http://image.evget.com/images/article/2016/java818.png" alt=""></p>
<p>后者的代码对于哪些值是要保存的更加明确。当 lambda 可以被折叠到方法参考的时候，IntelliJ IDEA 通常会让你知道。</p>
<p><img src="http://image.evget.com/images/article/2016/java819.png" alt=""></p>
<h4 id="当遍历一个集合时，在可行的情况下使用-Streams-API"><a href="#当遍历一个集合时，在可行的情况下使用-Streams-API" class="headerlink" title="当遍历一个集合时，在可行的情况下使用 Streams API"></a><strong>当遍历一个集合时，在可行的情况下使用 Streams API</strong></h4><p>… 或者新的集合方法，如 forEach。IntelliJ IDEA 给你建议是：</p>
<p><img src="http://image.evget.com/images/article/2016/java820.png" alt=""></p>
<p>一般使用 Streams API 比循环和 if 语句的组合更加明确。例如：</p>
<p><img src="http://image.evget.com/images/article/2016/java821.png" alt=""></p>
<p>IntelliJ IDEA 建议这可重构为：</p>
<p><img src="http://image.evget.com/images/article/2016/java822.png" alt=""></p>
<p>我所做的性能测试表明这种重构令人惊讶——并不总是可预测性能是保持不变，改善还是变得更糟。与往常一样，如果性能在应用程序中是关键，那么在交付一种风格到另一种之前衡量它。</p>
<h4 id="遍历数组时使用循环"><a href="#遍历数组时使用循环" class="headerlink" title="遍历数组时使用循环"></a><strong>遍历数组时使用循环</strong></h4><p>但是，使用 Java 8 并不一定意味着你必须到处使用流和新的集合方法。IntelliJ IDEA 会建议转换成流，但是，这并不意味着你必须回答 “yes”（记得检查是可以抑制或关闭的）。</p>
<p>特别是，遍历原始类型的小型数组几乎肯定会用，以获得更好的性能循环，很可能（至少对于 Java 开发人员是新的流）更具可读性。</p>
<p><img src="http://image.evget.com/images/article/2016/java823.png" alt=""></p>
<p>与任何技巧一样，规则并不是一成不变的，但你应该决定是尽可能地使用 Streams API，还是依然对一些操作使用循环。总之，要一致。</p>
<h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a><strong>最后</strong></h3><p>每天都在发现新的东西，并且有时候我的偏好会发生变化——例如，方法引用，我曾经深恶痛绝并且避免在我的代码中使用。现在我很想听听你的秘诀！</p>
<p>本文地址 <a href="https://blog.coder4j.cn/2018/02/26/转-Java-8-开发的-4-大顶级技巧/">https://blog.coder4j.cn/2018/02/26/转-Java-8-开发的-4-大顶级技巧/</a> </p>
]]></content>
      
        
        <tags>
            
            <tag> jdk8 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[[转] 使用 Java8 Optional 的正确姿势]]></title>
      <url>https://blog.coder4j.cn/2018/02/26/%E8%BD%AC-%E4%BD%BF%E7%94%A8-Java8-Optional-%E7%9A%84%E6%AD%A3%E7%A1%AE%E5%A7%BF%E5%8A%BF/</url>
      <content type="html"><![CDATA[<p><a href="http://www.importnew.com/22060.html" target="_blank" rel="external">原文链接</a></p>
<p><img src="http://ww1.sinaimg.cn/large/68f7efe0gy1fou0ynetdcj21hc3847rl.jpg" alt=""></p>
<p>本文地址 <a href="https://blog.coder4j.cn/2018/02/26/转-使用-Java8-Optional-的正确姿势/">https://blog.coder4j.cn/2018/02/26/转-使用-Java8-Optional-的正确姿势/</a> </p>
]]></content>
      
        
        <tags>
            
            <tag> jdk8 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[[转] 版本号命名指南]]></title>
      <url>https://blog.coder4j.cn/2018/02/26/%E8%BD%AC-%E7%89%88%E6%9C%AC%E5%8F%B7%E5%91%BD%E5%90%8D%E6%8C%87%E5%8D%97/</url>
      <content type="html"><![CDATA[<blockquote>
<p>本文由 <a href="http://ksria.com/simpread/" target="_blank" rel="external">简悦 SimpRead</a> 转码， 原文地址 <a href="http://www.importnew.com/28063.html" target="_blank" rel="external">http://www.importnew.com/28063.html</a> 原文出处： <a href="http://wsfdl.com/devops/2016/09/27/%E7%89%88%E6%9C%AC%E5%8F%B7.html" target="_blank" rel="external">koala bear</a></p>
</blockquote>
<p>首先看看某些常见软件的版本号：</p>
<ul>
<li>Linux Kernel： 0.0.1，1.0.0，2.6.32，3.0.18…，若用 X.Y.Z 表示，则偶数 Y 表示稳定版本，奇数 Y 表示开发版本。</li>
<li>Windows：windows 98，windows 2000，windows xp，windows 7…，最大的特点是杂乱无章，毫无规律。</li>
<li>SSH Client：0.9.8。</li>
<li>OpenStack：2014.1.3，2015.1.1.dev8。</li>
</ul>
<p>从上可以看出，不同的软件版本号风格各异，随着系统的规模越大，依赖的软件越多，如果这些软件没有遵循一套规范的命名风格，容易造成 <a href="https://en.wikipedia.org/wiki/Dependency_hell" target="_blank" rel="external">Dependency Hell</a>。所以当我们发布版本时，版本号的命名需要遵循某种规则，其中 <a href="http://semver.org/" target="_blank" rel="external">Semantic Versioning 2.0.0</a> 定义了一套简单的规则及条件来约束版本号的配置和增长。本文根据 <a href="http://semver.org/" target="_blank" rel="external">Semantic Versionning 2.0.0</a> 和 <a href="http://docs.openstack.org/developer/pbr/semver.html" target="_blank" rel="external">Semantic Versioning 3.0.0</a> 选择性的整理出版本号命名规则指南。</p>
<hr>
<h1 id="版本号命名规则指南"><a href="#版本号命名规则指南" class="headerlink" title="版本号命名规则指南"></a>版本号命名规则指南</h1><p>版本号的格式为 X.Y.Z(又称 Major.Minor.Patch)，递增的规则为：</p>
<ul>
<li>X 表示主版本号，当 API 的兼容性变化时，X 需递增。</li>
<li>Y 表示次版本号，当增加功能时 (不影响 API 的兼容性)，Y 需递增。</li>
<li>Z 表示修订号，当做 Bug 修复时 (不影响 API 的兼容性)，Z 需递增。</li>
</ul>
<p>详细的规则如下：</p>
<ol>
<li>X, Y, Z 必须为非负整数，且不得包含前导零，必须按数值递增，如 1.9.0 -&gt; 1.10.0 -&gt; 1.11.0</li>
<li>0.Y.Z 的版本号表明软件处于初始开发阶段，意味着 API 可能不稳定；1.0.0 表明版本已有稳定的 API。</li>
<li>当 API 的兼容性变化时，X 必须递增，Y 和 Z 同时设置为 0；当新增功能 (不影响 API 的兼容性) 或者 API 被标记为 Deprecated 时，Y 必须递增，同时 Z 设置为 0；当进行 bug fix 时，Z 必须递增。</li>
<li>先行版本号 (Pre-release) 意味该版本不稳定，可能存在兼容性问题，其格式为：X.Y.Z.[a-c][正整数]，如 1.0.0.a1，1.0.0.b99，1.0.0.c1000。</li>
<li>开发版本号常用于 CI-CD，格式为 X.Y.Z.dev[正整数]，如 1.0.1.dev4。</li>
<li>版本号的排序规则为依次比较主版本号、次版本号和修订号的数值，如 1.0.0 &lt; 1.0.1 &lt; 1.1.1 &lt; 2.0.0；对于先行版本号和开发版本号，有：1.0.0.a100 &lt; 1.0.0，2.1.0.dev3 &lt; 2.1.0；当存在字母时，以 ASCII 的排序来比较，如 1.0.0.a1 &lt; 1.0.0.b1。</li>
<li>注意：版本一经发布，不得修改其内容，任何修改必须在新版本发布！</li>
</ol>
<hr>
<h1 id="一些修饰的词"><a href="#一些修饰的词" class="headerlink" title="一些修饰的词"></a>一些修饰的词</h1><ul>
<li>alpha：内部版本</li>
<li>beta：测试版</li>
<li>demo：演示版</li>
<li>enhance：增强版</li>
<li>free：自由版</li>
<li>full version：完整版，即正式版</li>
<li>lts：长期维护版本</li>
<li>release：发行版</li>
<li>rc：即将作为正式版发布</li>
<li>standard：标准版</li>
<li>ultimate：旗舰版</li>
<li>upgrade：升级版</li>
</ul>
<p>本文地址 <a href="https://blog.coder4j.cn/2018/02/26/转-版本号命名指南/">https://blog.coder4j.cn/2018/02/26/转-版本号命名指南/</a> </p>
]]></content>
      
        <categories>
            
            <category> 程序员的自我修养 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 程序员的自我修养 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[[转] 正则表达式简明参考]]></title>
      <url>https://blog.coder4j.cn/2018/02/11/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%AE%80%E5%8D%95%E6%95%99%E7%A8%8B/</url>
      <content type="html"><![CDATA[<blockquote>
<p>本文由 <a href="http://ksria.com/simpread/" target="_blank" rel="external">简悦 SimpRead</a> 转码， 原文地址 <a href="http://xiaoleilu.com/regex-guide" target="_blank" rel="external">http://xiaoleilu.com/regex-guide</a></p>
</blockquote>
<h1 id="正则表达式简明参考"><a href="#正则表达式简明参考" class="headerlink" title="正则表达式简明参考"></a><a href="/regex-guide" title="正则表达式简明参考">正则表达式简明参考</a></h1><p>2014-09-11</p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我想在网上最出名的正则相关的一篇文章就是《正则表达式30分钟入门教程》了，说实话这篇文章确实是我的正则入门，但是随着使用熟练，冗长的文章已经不能满足我了，在此做个归纳总结，用于快速查阅。</p>
<p>以下语法在<strong>Java</strong>中有效，大部分应该是通用的。</p>
<h2 id="元字符"><a href="#元字符" class="headerlink" title="元字符"></a>元字符</h2><p>元字符，又叫字符集，就是用一些特殊符号表示特定种类的字符或位置。</p>
<p><strong>匹配字符</strong></p>
<ul>
<li><code>.</code> 匹配除换行符以外的任意字符</li>
<li><code>\w</code> 匹配字母或数字或下划线或汉字</li>
<li><code>\s</code> 匹配任意的空白符</li>
<li><code>\d</code> 匹配数字</li>
</ul>
<p><strong>匹配位置</strong></p>
<ul>
<li><code>\b</code> 匹配单词的开始或结束</li>
<li><code>^</code> 匹配字符串的开始</li>
<li><code>$</code> 匹配字符串的结束</li>
<li><code>\G</code> 上一个匹配的结尾（本次匹配开始）</li>
<li><code>\A</code> 字符串开头(类似<code>^</code>，但不受处理多行选项的影响)</li>
<li><code>\Z</code> 字符串结尾或行尾(不受处理多行选项的影响)</li>
<li><code>\z</code> 字符串结尾(类似<code>$</code>，但不受处理多行选项的影响)</li>
</ul>
<p><strong>重复</strong></p>
<ul>
<li><code>*</code> 重复零次或更多次</li>
<li><code>+</code> 重复一次或更多次</li>
<li><code>?</code> 重复零次或一次</li>
<li><code>{n}</code> 重复n次</li>
<li><code>{n,}</code> 重复n次或更多次</li>
<li><code>{n,m}</code> 重复n到m次</li>
</ul>
<h2 id="字符转义"><a href="#字符转义" class="headerlink" title="字符转义"></a>字符转义</h2><p>如果想匹配元字符本身或者正则中的一些特殊字符，使用<code>\</code>转义。例如匹配<code>*</code>这个字符则使用<code>\*</code>，匹配<code>\</code>这个字符，使用<code>\\</code>。</p>
<p>需要转义的字符：<code>$</code>, <code>(</code>, <code>)</code>, <code>*</code>, <code>+</code>, <code>.</code>, <code>[</code>, <code>]</code>, <code>?</code>, <code>\</code>, <code>^</code>, <code>{</code>, <code>}</code>, <code>|</code></p>
<h2 id="字符类"><a href="#字符类" class="headerlink" title="字符类"></a>字符类</h2><p>当需要匹配明确的字符或字符集合时候，就用到字符类。</p>
<p><strong>特殊字符</strong></p>
<ul>
<li><code>\0hh</code> 8进制值hh所表示的字符</li>
<li><code>\xhh</code> 16进制值hh所表示的字符</li>
<li><code>\uhhhh</code> 16进制值hhhh所表示的Unicode字符</li>
<li><code>\t</code> Tab</li>
<li><code>\n</code> 换行符</li>
<li><code>\r</code> 回车符</li>
<li><code>\f</code> 换页符</li>
<li><code>\e</code> Escape</li>
<li><code>\cN</code> ASCII控制字符。比如<code>\cC</code>代表<code>Ctrl+C</code></li>
<li><code>\p{name}</code> Unicode中命名为name的字符类，例如<code>\p{IsGreek}</code></li>
</ul>
<p><strong>陈列</strong></p>
<ul>
<li><code>[aeiou]</code> 匹配一个元音字符</li>
<li><code>[.?!]</code> 匹配给定的一个标点</li>
</ul>
<p><strong>范围</strong></p>
<ul>
<li><code>[0-9]</code> 匹配0~9的数字，同<code>\d</code></li>
<li><code>[a-z]</code> 匹配所有小写字母</li>
<li><code>[a-zA-Z]</code> 匹配所有字母</li>
<li><code>[a-z0-9A-Z_\u4E00-\u9FFF]</code> 等同于<code>\w</code></li>
</ul>
<h2 id="反义"><a href="#反义" class="headerlink" title="反义"></a>反义</h2><p>表示不属于元字符或者字符类的字符</p>
<p><strong>反义元字符</strong></p>
<ul>
<li><code>\W</code> 匹配任意不是字母，数字，下划线，汉字的字符</li>
<li><code>\S</code> 匹配任意不是空白符的字符</li>
<li><code>\D</code> 匹配任意非数字的字符</li>
<li><code>\B</code> 匹配不是单词开头或结束的位置</li>
</ul>
<p><strong>反义字符类</strong></p>
<ul>
<li><code>[^x]</code> 匹配除了x以外的任意字符</li>
<li><code>[^aeiou]</code> 匹配除了aeiou这几个字母以外的任意字符</li>
</ul>
<h2 id="分枝条件"><a href="#分枝条件" class="headerlink" title="分枝条件"></a>分枝条件</h2><p>又叫逻辑运算符，在此<code>X</code>和<code>Y</code>表示两个<strong>表达式</strong></p>
<ul>
<li><code>XY</code> X紧跟Y</li>
<li><code>X|Y</code> 表示X或Y，从左到右，满足第一个条件就不会继续匹配了。</li>
</ul>
<h2 id="分组"><a href="#分组" class="headerlink" title="分组"></a>分组</h2><p>在这里我把<strong>表达式</strong>统一以<code>\w</code>为例：</p>
<ul>
<li><code>(\w)</code> 被一个括号包围起来是一个整体，表示一个分组</li>
<li><code>(\w)(\w)</code> 自动命名分组，第一个小括号是分组1，第二个小括号是分组2</li>
<li><code>(?&#39;Word&#39;\w+))</code> 表示定义了一个叫做<code>Word</code>的分组</li>
<li><code>(?&lt;Word&gt;\w+))</code> 表示定义了一个叫做<code>Word</code>的分组</li>
<li><code>(?:\w+)</code> 匹配exp,不捕获匹配的文本，也不给此分组分配组号</li>
</ul>
<h2 id="后向引用"><a href="#后向引用" class="headerlink" title="后向引用"></a>后向引用</h2><p>后面的表达式可以引用前面的某个分组，用<code>\1</code>表示，就好像分组1的值赋值给了<code>\1</code>这个变量，这个变量可以在后面任意位置引用。</p>
<ul>
<li><code>\1</code> 表示分组1匹配的文本</li>
<li><code>\k&lt;Word&gt;</code> 表示分组<code>Word</code>匹配的文本</li>
</ul>
<p>匹配重复两个的英文，例如匹配<code>Hello Hello</code>、<code>lei123 lei123</code>：</p>
<ol>
<li><code>(\w+)\s+\1</code></li>
<li><code>(?&lt;Word&gt;\w+)\s+\k&lt;Word&gt;</code></li>
</ol>
<h2 id="零宽断言（正向和负向）"><a href="#零宽断言（正向和负向）" class="headerlink" title="零宽断言（正向和负向）"></a>零宽断言（正向和负向）</h2><p>零宽断言表示匹配字符的时候再添加一些定位条件，使匹配更精准。</p>
<ul>
<li><code>\w+(?=ing)</code> 匹配以<code>ing</code>结尾的多个字符（不包括ing）</li>
<li><code>\w+(?!ing)</code> 匹配<strong>不是</strong>以<code>ing</code>结尾的多个字符</li>
</ul>
<hr>
<ul>
<li><code>(?&lt;=re)\w+</code> 匹配以<code>re</code>开头的多个字符（不包括re）</li>
<li><code>(?&lt;!re)\w+</code> 匹配<strong>不是</strong>以<code>re</code>开头的多个字符</li>
</ul>
<hr>
<ul>
<li><code>(?&lt;=\s)\d+(?=\s)</code> 匹配两边是空白符的数字，不包括空白符</li>
</ul>
<h2 id="贪婪与懒惰"><a href="#贪婪与懒惰" class="headerlink" title="贪婪与懒惰"></a>贪婪与懒惰</h2><p><strong>贪婪</strong>：匹配尽可能长的字符串</p>
<p><strong>懒惰</strong>：匹配尽可能短的字符串</p>
<p>懒惰模式的启用只需在<strong>重复元字符</strong>之后加<code>?</code>既可。</p>
<ul>
<li><code>*?</code> 重复任意次，但尽可能少重复</li>
<li><code>+?</code> 重复1次或更多次，但尽可能少重复</li>
<li><code>??</code> 重复0次或1次，但尽可能少重复</li>
<li><code>{n,m}?</code> 重复n到m次，但尽可能少重复</li>
<li><code>{n,}?</code> 重复n次以上，但尽可能少重复</li>
</ul>
<h2 id="处理选项"><a href="#处理选项" class="headerlink" title="处理选项"></a>处理选项</h2><p>在表达式里插记号的方式来启用绝大多数的模式，在正则的哪里插入，就从哪里启用。</p>
<ol>
<li><code>(?i)</code>：忽略大小写(CASE_INSENSITIVE)</li>
<li><code>(?x)</code>：忽略空格字符(COMMENTS)</li>
<li><code>(?s)</code>：<code>.</code>匹配任意字符，包括换行符（DOTALL）</li>
<li><code>(?m)</code>：多行模式（MULTILINE）</li>
<li><code>(?u)</code>：对Unicode符大小写不敏感（UNICODE_CASE），必须启用<strong>CASE_INSENSITIVE</strong></li>
<li><code>(?d)</code>：只有’\n’才被认作一行的中止（UNIX_LINES）</li>
</ol>
<h2 id="平衡组-递归匹配"><a href="#平衡组-递归匹配" class="headerlink" title="平衡组/递归匹配"></a>平衡组/递归匹配</h2><p>平衡组用于匹配嵌套层次结构，常用于匹配HTML标签（当HTML内容不规范，起始标签和结束标签数量不同时，匹配出正确配对的标签），在此把表达式统一以<code>\w</code>为例。</p>
<ul>
<li><code>(?&#39;group&#39;\w)</code> 捕获的分组（<code>\w</code>匹配到的内容）命名为<code>group</code>，并压入堆栈</li>
<li><code>(?&#39;-group&#39;\w)</code> 捕获分组（<code>\w</code>匹配到的内容）后，弹出<code>group</code>分组栈的栈顶内容（最后压入的捕获内容），堆栈本来为空，则本分组的匹配失败</li>
<li><code>(?(group)yes|no)</code> 如果<code>group</code>栈非空匹配表达式<code>yes</code>，否则匹配表达式<code>no</code></li>
<li><code>(?!)</code> 零宽负向先行断言，由于没有后缀表达式，试图匹配总是失败</li>
</ul>
<h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p>注释语法：<code>(?#comment)</code>，这个语法的内容会被正则忽略，用于注释含义。可以放在正则表达式的任意位置。</p>
<hr>
<p>参考：</p>
<p><a href="http://www.jb51.net/tools/zhengze.html" target="_blank" rel="external">正则表达式30分钟入门教程</a></p>
<p><a href="http://www.java3z.com/cwbwebhome/article/article2/2311.html?id=877" target="_blank" rel="external">正则表达式</a></p>
<p>本文地址 <a href="https://blog.coder4j.cn/2018/02/11/正则表达式简单教程/">https://blog.coder4j.cn/2018/02/11/正则表达式简单教程/</a> </p>
]]></content>
      
        
        <tags>
            
            <tag> 正则 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[[转] 小明历险记：规则引擎drools教程一]]></title>
      <url>https://blog.coder4j.cn/2018/02/10/%E8%BD%AC-%E5%B0%8F%E6%98%8E%E5%8E%86%E9%99%A9%E8%AE%B0%EF%BC%9A%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8Edrools%E6%95%99%E7%A8%8B%E4%B8%80/</url>
      <content type="html"><![CDATA[<p>转自 <a href="http://www.ityouknow.com/drools/2017/08/07/drools-started.html" target="_blank" rel="external">小明历险记：规则引擎drools教程一</a><br><img src="http://ww1.sinaimg.cn/large/68f7efe0gy1fobrwwkdg4j21hc6jpe82.jpg" alt=""></p>
<p>本文地址 <a href="https://blog.coder4j.cn/2018/02/10/转-小明历险记：规则引擎drools教程一/">https://blog.coder4j.cn/2018/02/10/转-小明历险记：规则引擎drools教程一/</a> </p>
]]></content>
      
        <categories>
            
            <category> 规则引擎 </category>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> drools </tag>
            
            <tag> 规则引擎 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[mysql 中 between and 的边界问题]]></title>
      <url>https://blog.coder4j.cn/2018/02/10/mysql-%E4%B8%AD-between-and-%E7%9A%84%E8%BE%B9%E7%95%8C%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<blockquote>
<p>mysql 中的 between … and … 语法，相信大家都会，但是在边界这个细节上一不留神就可能会出错。下面就以一个简单的例子去理解边界性的问题。</p>
</blockquote>
<ol>
<li><p>首先我们建一个简单的用户表，简单到只有一个 age 和 name 字段（其实可以没有），下面是建表语句</p>
<pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> t_user
<span class="token punctuation">(</span>
   age <span class="token keyword">int</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
   name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token boolean">null</span>
<span class="token punctuation">)</span>
<span class="token keyword">engine</span><span class="token operator">=</span><span class="token keyword">InnoDB</span>
<span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>插入几条测试语句</p>
<pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> mytest<span class="token punctuation">.</span>t_user <span class="token punctuation">(</span>age<span class="token punctuation">,</span> name<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token string">'kiwi'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> mytest<span class="token punctuation">.</span>t_user <span class="token punctuation">(</span>age<span class="token punctuation">,</span> name<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">17</span><span class="token punctuation">,</span> <span class="token string">'kimi'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> mytest<span class="token punctuation">.</span>t_user <span class="token punctuation">(</span>age<span class="token punctuation">,</span> name<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">'tony'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> mytest<span class="token punctuation">.</span>t_user <span class="token punctuation">(</span>age<span class="token punctuation">,</span> name<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">23</span><span class="token punctuation">,</span> <span class="token string">'kim'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> mytest<span class="token punctuation">.</span>t_user <span class="token punctuation">(</span>age<span class="token punctuation">,</span> name<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">,</span> <span class="token string">'tom'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>执行完插入语句后，表应该是如下这样<br><img src="http://ww1.sinaimg.cn/large/68f7efe0gy1fobqkynwtbj20b005mjrk.jpg" alt=""></p>
</li>
<li><p>准备工作已经做完了，我们先执行一下 between and 语句</p>
<pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> t_user <span class="token keyword">WHERE</span> age <span class="token operator">BETWEEN</span> <span class="token number">17</span> <span class="token operator">AND</span> <span class="token number">23</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<ul>
<li>执行结果如下<br><img src="http://ww1.sinaimg.cn/large/68f7efe0gy1fobqo084drj20am03qq2y.jpg" alt=""></li>
<li>分析<blockquote>
<p>可见结果是包含边界的，在这里也就是包含 17 与 23，相当于如下 sql ，<br><code>SELECT * FROM t_user WHERE age &gt;= 17 AND age &lt;= 23;</code></p>
</blockquote>
</li>
</ul>
</li>
<li><p>我们接着执行 not between and 语句</p>
<pre class="line-numbers language-sql"><code class="language-sql"> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> t_user <span class="token keyword">WHERE</span> age <span class="token operator">NOT</span> <span class="token operator">BETWEEN</span> <span class="token number">17</span> <span class="token operator">AND</span> <span class="token number">23</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<ul>
<li>执行结果如下<br><img src="http://ww1.sinaimg.cn/large/68f7efe0gy1fobqv3ybjxj20am02u3yg.jpg" alt=""><ul>
<li>分析<blockquote>
<p>可见结果是不包含边界的，在这里也就是 17 与 23 不在检索条件内，相当于如下 sql ,<br><code>SELECT * FROM t_user WHERE age &lt; 17 OR age &gt; 23;</code></p>
</blockquote>
</li>
</ul>
</li>
</ul>
</li>
<li><p>最终结论</p>
<ol>
<li>between … and … 是包含边界的，相当于 … &gt;= AND &lt;= … ，很容易以为是大于并且小于边界的</li>
<li>not between … and … 是不包含边界的，相当于 … &gt; OR &lt; …，这里可以理解为是 between  … and 的否命题</li>
</ol>
</li>
</ol>
<p>本文地址 <a href="https://blog.coder4j.cn/2018/02/10/mysql-中-between-and-的边界问题/">https://blog.coder4j.cn/2018/02/10/mysql-中-between-and-的边界问题/</a> </p>
]]></content>
      
        <categories>
            
            <category> mysql </category>
            
        </categories>
        
        
        <tags>
            
            <tag> mysql </tag>
            
            <tag> between and </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[docker 常用命令]]></title>
      <url>https://blog.coder4j.cn/2018/01/19/docker-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      <content type="html"><![CDATA[<h5 id="基础命令"><a href="#基础命令" class="headerlink" title="基础命令"></a>基础命令</h5><pre class="line-numbers language-shell"><code class="language-shell">  # 命令格式
  docker 命令关键字(command) 一系列参数([args...]) 

  # 查询命令帮助
  docker command --help
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h6 id="1-启动容器"><a href="#1-启动容器" class="headerlink" title="1. 启动容器"></a>1. 启动容器</h6><p><code>docker start id/name</code></p>
<h6 id="2-关闭容器"><a href="#2-关闭容器" class="headerlink" title="2. 关闭容器"></a>2. 关闭容器</h6><p><code>docker stop id/name</code></p>
<h6 id="3-查询在线容器"><a href="#3-查询在线容器" class="headerlink" title="3. 查询在线容器"></a>3. 查询在线容器</h6><pre class="line-numbers language-shell"><code class="language-shell">  docker ps [-a] 
  # -a 显示所有，包括已经关闭的
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h6 id="4-查询容器信息"><a href="#4-查询容器信息" class="headerlink" title="4. 查询容器信息"></a>4. 查询容器信息</h6><p><code>docker inspect id/name</code></p>
<h6 id="5-查看容器日志"><a href="#5-查看容器日志" class="headerlink" title="5. 查看容器日志"></a>5. 查看容器日志</h6><p><code>docker logs [-f] id/name</code></p>
<h6 id="6-查看容器资源占用"><a href="#6-查看容器资源占用" class="headerlink" title="6. 查看容器资源占用"></a>6. 查看容器资源占用</h6><p><code>docker stats</code></p>
<h6 id="7-容器内部命令"><a href="#7-容器内部命令" class="headerlink" title="7. 容器内部命令"></a>7. 容器内部命令</h6><pre class="line-numbers language-shell"><code class="language-shell">  # 在容器内部执行命令
  docker exec id/name 执行命令  
  # 以root用户执行命令
  docker exec -it id/name 执行命令
  # 以root用户打开一个终端,exit退出
  docker exec -it id/name /bin/bash
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h6 id="8-镜像查询"><a href="#8-镜像查询" class="headerlink" title="8. 镜像查询"></a>8. 镜像查询</h6><pre class="line-numbers language-shell"><code class="language-shell">docker search xx
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h6 id="9-镜像下载"><a href="#9-镜像下载" class="headerlink" title="9. 镜像下载"></a>9. 镜像下载</h6><pre class="line-numbers language-shell"><code class="language-shell">docker pull xx
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h6 id="10-本地镜像列表"><a href="#10-本地镜像列表" class="headerlink" title="10. 本地镜像列表"></a>10. 本地镜像列表</h6><pre class="line-numbers language-shell"><code class="language-shell">docker images
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h6 id="11-启动容器"><a href="#11-启动容器" class="headerlink" title="11. 启动容器"></a>11. 启动容器</h6><pre class="line-numbers language-shell"><code class="language-shell">docker run [--name] [--link] 镜像id/name

# --link 容器连接
# --name 容器起的名称
# --p 端口映射 8080:80
# --e 环境变量设置
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h6 id="12-删除容器"><a href="#12-删除容器" class="headerlink" title="12. 删除容器"></a>12. 删除容器</h6><pre class="line-numbers language-shell"><code class="language-shell">docker rm id/name
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h6 id="13-创建镜像"><a href="#13-创建镜像" class="headerlink" title="13. 创建镜像"></a>13. 创建镜像</h6><pre class="line-numbers language-shell"><code class="language-shell">docker commit id imageName
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h6 id="14-关闭所有运行的容器"><a href="#14-关闭所有运行的容器" class="headerlink" title="14. 关闭所有运行的容器"></a>14. 关闭所有运行的容器</h6><pre class="line-numbers language-shell"><code class="language-shell">docker stop $(docker ps -q)
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>本文地址 <a href="https://blog.coder4j.cn/2018/01/19/docker-常用命令/">https://blog.coder4j.cn/2018/01/19/docker-常用命令/</a> </p>
]]></content>
      
        
        <tags>
            
            <tag> docker </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[[转]spring 循环依赖]]></title>
      <url>https://blog.coder4j.cn/2018/01/13/spring-%E5%BE%AA%E7%8E%AF%E5%BC%95%E5%85%A5%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<blockquote>
<p>本文由 <a href="http://ksria.com/simpread/" target="_blank" rel="external">简悦 SimpRead</a> 转码， 原文地址 <a href="http://www.importnew.com/17580.html" target="_blank" rel="external">http://www.importnew.com/17580.html</a> 原文出处： <a href="http://sishuok.com/forum/blogPost/list/2448.html" target="_blank" rel="external">张开涛</a></p>
</blockquote>
<h3 id="3-2-1-什么是循环依赖"><a href="#3-2-1-什么是循环依赖" class="headerlink" title="3.2.1  什么是循环依赖"></a>3.2.1  什么是循环依赖</h3><p>循环依赖就是循环引用，就是两个或多个 Bean 相互之间的持有对方，比如 CircleA 引用 CircleB，CircleB 引用 CircleC，CircleC 引用 CircleA，则它们最终反映为一个环。此处不是循环调用，循环调用是方法之间的环调用。如图 3-5 所示：</p>
<p> <img src="http://sishuok.com/forum/upload/2012/2/20/07001b6dc0a31b138de5923cf5c28314__1.JPG" alt=""></p>
<p>图 3-5 循环引用</p>
<pre><code>   循环调用是无法解决的，除非有终结条件，否则就是死循环，最终导致内存溢出错误。
</code></pre><p>Spring 容器循环依赖包括构造器循环依赖和 setter 循环依赖，那 Spring 容器如何解决循环依赖呢？首先让我们来定义循环引用类： </p>
<pre><code>package cn.javass.spring.chapter3.bean;
public class CircleA {
    private CircleB circleB;
    public CircleA() {
    }
    public CircleA(CircleB circleB) {
        this.circleB = circleB;
    }
public void setCircleB(CircleB circleB) 
{
        this.circleB = circleB;
    }
public void a() {
   circleB.b();
}
}
</code></pre><pre><code>package cn.javass.spring.chapter3.bean;
public class CircleB {
    private CircleC circleC;
    public CircleB() {
    }
    public CircleB(CircleC circleC) {
        this.circleC = circleC;
    }
public void setCircleC(CircleC circleC) 
{
        this.circleC = circleC;
    }
    public void b() {
        circleC.c();
    }
}
</code></pre><pre><code>package cn.javass.spring.chapter3.bean;
public class CircleC {
    private CircleC circleC;
    public CircleB() {
    }
    public CircleB(CircleC circleC) {
        this.circleC = circleC;
    }
public void setCircleC(CircleC circleC) 
{
        this.circleC = circleC;
    }
    public void b() {
        circleC.c();
    }
}
</code></pre><h3 id="3-2-2-Spring-如何解决循环依赖"><a href="#3-2-2-Spring-如何解决循环依赖" class="headerlink" title="3.2.2        Spring 如何解决循环依赖"></a>3.2.2        Spring 如何解决循环依赖</h3><p><strong>一、构造器循环依赖：</strong>表示通过构造器注入构成的循环依赖，此依赖是无法解决的，只能抛出 BeanCurrentlyInCreationException 异常表示循环依赖。</p>
<p>如在创建 CircleA 类时，构造器需要 CircleB 类，那将去创建 CircleB，在创建 CircleB 类时又发现需要 CircleC 类，则又去创建 CircleC，最终在创建 CircleC 时发现又需要 CircleA；从而形成一个环，没办法创建。</p>
<p>Spring 容器将每一个正在创建的 Bean 标识符放在一个 “当前创建 Bean 池” 中，Bean 标识符在创建过程中将一直保持在这个池中，因此如果在创建 Bean 过程中发现自己已经在 “当前创建 Bean 池” 里时将抛出 BeanCurrentlyInCreationException 异常表示循环依赖；而对于创建完毕的 Bean 将从 “当前创建 Bean 池” 中清除掉。</p>
<p>1）首先让我们看一下配置文件（chapter3/circleInjectByConstructor.xml）：</p>
<pre><code>&lt;bean id=&quot;circleA&quot; class=&quot;cn.javass.spring.chapter3.bean.CircleA&quot;&gt;
&lt;constructor-arg index=&quot;0&quot; ref=&quot;circleB&quot;/&gt;
&lt;/bean&gt;
&lt;bean id=&quot;circleB&quot; class=&quot;cn.javass.spring.chapter3.bean.CircleB&quot;&gt;
&lt;constructor-arg index=&quot;0&quot; ref=&quot;circleC&quot;/&gt;
&lt;/bean&gt;
&lt;bean id=&quot;circleC&quot; class=&quot;cn.javass.spring.chapter3.bean.CircleC&quot;&gt;
&lt;constructor-arg index=&quot;0&quot; ref=&quot;circleA&quot;/&gt;
&lt;/bean&gt;
</code></pre><p>2）写段测试代码（cn.javass.spring.chapter3.CircleTest）测试一下吧：</p>
<pre><code>@Test(expected = BeanCurrentlyInCreationException.class)
public void testCircleByConstructor() throws Throwable {
try {
      new ClassPathXmlApplicationContext(&quot;chapter3/circleInjectByConstructor.xml&quot;);
    }
    catch (Exception e) {
      //因为要在创建circle3时抛出；
      Throwable e1 = e.getCause().getCause().getCause();
      throw e1;
    }
}
</code></pre><p>让我们分析一下吧：</p>
<p>1、Spring 容器创建 “circleA” Bean，首先去“当前创建 Bean 池” 查找是否当前 Bean 正在创建，如果没发现，则继续准备其需要的构造器参数“circleB”，并将“circleA” 标识符放到“当前创建 Bean 池”；</p>
<p>2、Spring 容器创建 “circleB” Bean，首先去“当前创建 Bean 池” 查找是否当前 Bean 正在创建，如果没发现，则继续准备其需要的构造器参数“circleC”，并将“circleB” 标识符放到“当前创建 Bean 池”；</p>
<p>3、Spring 容器创建 “circleC” Bean，首先去“当前创建 Bean 池” 查找是否当前 Bean 正在创建，如果没发现，则继续准备其需要的构造器参数“circleA”，并将“circleC” 标识符放到“当前创建 Bean 池”；</p>
<p>4、到此为止 Spring 容器要去创建 “circleA”Bean，发现该 Bean 标识符在“当前创建 Bean 池” 中，因为表示循环依赖，抛出 BeanCurrentlyInCreationException。</p>
<p><strong>二、setter 循环依赖：</strong>表示通过 setter 注入方式构成的循环依赖。</p>
<p>对于 setter 注入造成的依赖是通过 Spring 容器提前暴露刚完成构造器注入但未完成其他步骤（如 setter 注入）的 Bean 来完成的，而且只能解决单例作用域的 Bean 循环依赖。</p>
<p>如下代码所示，通过提前暴露一个单例工厂方法，从而使其他 Bean 能引用到该 Bean。</p>
<pre><code>addSingletonFactory(beanName, new ObjectFactory() {
    public Object getObject() throws BeansException {
        return getEarlyBeanReference(beanName, mbd, bean);
    }
});
</code></pre><p>具体步骤如下：</p>
<p>1、Spring 容器创建单例 “circleA” Bean，首先根据无参构造器创建 Bean，并暴露一个“ObjectFactory ” 用于返回一个提前暴露一个创建中的 Bean，并将“circleA” 标识符放到“当前创建 Bean 池”；然后进行 setter 注入“circleB”；</p>
<p>2、Spring 容器创建单例 “circleB” Bean，首先根据无参构造器创建 Bean，并暴露一个“ObjectFactory” 用于返回一个提前暴露一个创建中的 Bean，并将“circleB” 标识符放到“当前创建 Bean 池”，然后进行 setter 注入“circleC”；</p>
<p>3、Spring 容器创建单例 “circleC” Bean，首先根据无参构造器创建 Bean，并暴露一个“ObjectFactory ” 用于返回一个提前暴露一个创建中的 Bean，并将 “circleC” 标识符放到“当前创建 Bean 池”，然后进行 setter 注入“circleA”；进行注入“circleA” 时由于提前暴露了 “ObjectFactory” 工厂从而使用它返回提前暴露一个创建中的 Bean；</p>
<p>4、最后在依赖注入 “circleB” 和“circleA”，完成 setter 注入。</p>
<p>对于 “prototype” 作用域 Bean，Spring 容器无法完成依赖注入，因为 “prototype” 作用域的 Bean，Spring 容器不进行缓存，因此无法提前暴露一个创建中的 Bean。</p>
<pre><code>&lt;!-- 定义Bean配置文件，注意scope都是“prototype”--&gt;
&lt;bean id=&quot;circleA&quot; class=&quot;cn.javass.spring.chapter3.bean.CircleA&quot; scope=&quot;prototype&quot;&gt;
        &lt;property name=&quot;circleB&quot; ref=&quot;circleB&quot;/&gt;
   &lt;/bean&gt;
   &lt;bean id=&quot;circleB&quot; class=&quot;cn.javass.spring.chapter3.bean.CircleB&quot; scope=&quot;prototype&quot;&gt;
       &lt;property name=&quot;circleC&quot; ref=&quot;circleC&quot;/&gt;
   &lt;/bean&gt;
   &lt;bean id=&quot;circleC&quot; class=&quot;cn.javass.spring.chapter3.bean.CircleC&quot; scope=&quot;prototype&quot;&gt;
       &lt;property name=&quot;circleA&quot; ref=&quot;circleA&quot;/&gt;
   &lt;/bean&gt;
</code></pre><pre><code>//测试代码cn.javass.spring.chapter3.CircleTest
@Test(expected = BeanCurrentlyInCreationException.class)
public void testCircleBySetterAndPrototype () throws Throwable {
    try {
        ClassPathXmlApplicationContext ctx = new ClassPathXmlApplicationContext(
&quot;chapter3/circleInjectBySetterAndPrototype.xml&quot;);
        System.out.println(ctx.getBean(&quot;circleA&quot;));
    }
    catch (Exception e) {
        Throwable e1 = e.getCause().getCause().getCause();
        throw e1;
    }
}
</code></pre><p>对于 “singleton” 作用域 Bean，可以通过 “setAllowCircularReferences(false);” 来禁用循环引用：</p>
<pre><code>@Test(expected = BeanCurrentlyInCreationException.class)
public void testCircleBySetterAndSingleton2() throws Throwable {
    try {
        ClassPathXmlApplicationContext ctx =
new ClassPathXmlApplicationContext();
        ctx.setConfigLocation(&quot;chapter3/circleInjectBySetterAndSingleton.xml&quot;);
        ctx.refresh();
    }
    catch (Exception e) {
        Throwable e1 = e.getCause().getCause().getCause();
        throw e1;
    }
}
</code></pre><p>本文地址 <a href="https://blog.coder4j.cn/2018/01/13/spring-循环引入的问题/">https://blog.coder4j.cn/2018/01/13/spring-循环引入的问题/</a> </p>
]]></content>
      
        <categories>
            
            <category> exception </category>
            
            <category> spring </category>
            
        </categories>
        
        
        <tags>
            
            <tag> spring </tag>
            
            <tag> exception </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[人的一切痛苦，本质上都是对自己无能的愤怒]]></title>
      <url>https://blog.coder4j.cn/2018/01/06/%E4%BA%BA%E7%9A%84%E4%B8%80%E5%88%87%E7%97%9B%E8%8B%A6%EF%BC%8C%E6%9C%AC%E8%B4%A8%E4%B8%8A%E9%83%BD%E6%98%AF%E5%AF%B9%E8%87%AA%E5%B7%B1%E6%97%A0%E8%83%BD%E7%9A%84%E6%84%A4%E6%80%92/</url>
      <content type="html"><![CDATA[<p>&emsp;人的一切痛苦，本质上都是对自己无能的愤怒！</p>
<p>&emsp;为什么不欺负别人，只欺负你，因为你好欺负，因为你是完美受害人，因为你无能！</p>
<p>&emsp;为什么不坑别人，只坑你，因为你傻，因为你蠢，因为你懦弱，因为你无能！</p>
<p>&emsp;为什么你活的那么累，因为你无能！</p>
<p>&emsp;为什么你总能接受不平等，因为你无能！</p>
<p>&emsp;为什么你明明可以说不，但是自我放弃，因为你无能！</p>
<p>&emsp;为什么你压力那么大，因为你无能！</p>
<p>&emsp;为什么你那么焦虑，因为你无能！</p>
<p>&emsp;为什么你觉得自己没有错，但是还是要卑躬屈膝去认错，因为你无能！</p>
<p>&emsp;为什么你一无所有，因为你无能！</p>
<p>&emsp;为什么你总是感觉尴尬，因为你无能！</p>
<p>&emsp;为什么别人可以不在乎你的感受，因为你无能！</p>
<p>&emsp;为什么你总是感到不好意思，因为你无能！</p>
<p>&emsp;为什么你总是抱怨，因为你无能！</p>
<p>&emsp;为什么你总是叹气，因为你无能！</p>
<p>&emsp;为什么别人觉得你是一个老好人，因为你无能！</p>
<p>&emsp;为什么你总是容易生气，因为你无能！</p>
<p>&emsp;为什么别人过的比你开心，比你好，因为你无能！</p>
<p>&emsp;为什么那么多机会你把握不住，因为你无能！</p>
<p>&emsp;为什么你总是觉得不公平，因为你无能！</p>
<p>&emsp;为什么你感觉害怕，因为你无能！</p>
<p>&emsp;为什么你总是不敢暴露自己的真实想法，因为你无能！</p>
<p>&emsp;为什么你喜欢看电影，因为你想逃避，逃避现实，逃避人生，逃避一切。逃避你的种种无能！</p>
<p>&emsp;为什么你什么事情都做不好，因为你无能！</p>
<p>&emsp;为什么你什么都坚持不下去，因为你无能！</p>
<p>&emsp;为什么当你想做什么事时，别人爱打击你，因为你无能！</p>
<p>&emsp;你就是一个 loser!</p>
<p>&emsp;怎么样也过不好这一生！</p>
<p>&emsp;一切的一切都是因为你无能！</p>
<p>&emsp;别人玩转着你的一切，别人侵蚀着你的一切，但是只是毫无表情的在一旁看着。因为你懦弱，因为你无能！</p>
<p>本文地址 <a href="https://blog.coder4j.cn/2018/01/06/人的一切痛苦，本质上都是对自己无能的愤怒/">https://blog.coder4j.cn/2018/01/06/人的一切痛苦，本质上都是对自己无能的愤怒/</a> </p>
]]></content>
      
        <categories>
            
            <category> 漫漫人生路 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[[转]为什么年轻时要多赚钱？]]></title>
      <url>https://blog.coder4j.cn/2018/01/06/%E8%BD%AC-%E4%B8%BA%E4%BB%80%E4%B9%88%E5%B9%B4%E8%BD%BB%E6%97%B6%E8%A6%81%E5%A4%9A%E8%B5%9A%E9%92%B1%EF%BC%9F/</url>
      <content type="html"><![CDATA[<blockquote>
<p>本文由 <a href="http://ksria.com/simpread/" target="_blank" rel="external">简悦 SimpRead</a> 转码， 原文地址 <a href="https://mp.weixin.qq.com/s?__biz=MjM5MTA4MjE5OA%3D%3D&amp;mid=2660133503&amp;idx=1&amp;sn=cd14d3771918901b405008797c5728e8#wechat_redirect" target="_blank" rel="external">https://mp.weixin.qq.com/s?__biz=MjM5MTA4MjE5OA%3D%3D&amp;mid=2660133503&amp;idx=1&amp;sn=cd14d3771918901b405008797c5728e8#wechat_redirect</a></p>
</blockquote>
<p><img src="https://mmbiz.qpic.cn/mmbiz_gif/ZsUic8pXgxFibEU1JABRpqPzSdmCYRCWiajsKBGPGOqcdAKZWSDLic6ibLtibYCfOjytScMdPR8tVyPwMdGOaPkYvczw/?wx_fmt=gif" alt=""></p>
<p>文 | 王耳朵</p>
<p>来源 | 王耳朵先生（ID:huangezishiba）</p>
<p><strong>Part1</strong></p>
<p><strong>那年，你 23 岁。第一次去女朋友家，见父母。</strong></p>
<p>其实，以前你们也见过，在视频里。这次不一样，是女朋友父母的盛情邀请。</p>
<p>坐在满满的一桌饭菜前，场面太正式，你有些隐隐不安。</p>
<p>餐过半程，女朋友的父亲，果然开始提问，先是些无关紧要的话题，然后话锋一转：</p>
<blockquote>
<p>大概什么时候买房？</p>
</blockquote>
<p>旁边，女朋友的母亲，也漫不经心说，隔壁家老刘的准女婿，刚买了套三室两厅。</p>
<p>你不知道，说些什么才好。你脑袋里，满是那张每月 4000 的工资卡。</p>
<p>然后，气氛就冷了。你匆匆吃完饭，找了个公司有事的借口，当天就返程了。</p>
<p><strong>一个星期后，你约了女朋友出来，平静地分了手。</strong></p>
<p>她的泪水，就像决堤的坝，但你仍然冷静的走了。</p>
<p>不是你冷静，而是你开始懂得，谈不起钱的爱情，注定走不远。</p>
<p>爱情中可以没钱，但结婚不行。</p>
<p><strong>Part2</strong></p>
<p><strong>你 26 岁了，你终于有了些积蓄。</strong></p>
<p>这三年，你去了新的城市，换了新工作。你曾拼命陪客户喝酒，也曾加班到天亮。</p>
<p>你的工资翻了两倍，某个时刻，你甚至感觉全身充满了力量。你决定去买房。</p>
<p>含着职业微笑的销售顾问，带你去了样板间。</p>
<p>南北通透的户型，小区绿化很好，推开窗，你就能看到远方的山脊线。</p>
<p>但问了总价，你就沉默了。房子涨价的速度，太快了。</p>
<p>你慢慢走回家，决定过些日子，房价降了再买。但你打开朋友圈，看到的第一条动态，就是市民连夜排队买房。</p>
<p>你知道，还不出手，可能再也追不上房价了。</p>
<p>你狠下心，给父母打电话，拿来了他们的 10 万养老钱。你给所有的亲戚打电话，陪着笑脸，向他们借钱。</p>
<p>三天后，凑够了首付，你去签了购房合同。</p>
<p><strong>按上指印的那一刻，你的眼睛酸了。</strong></p>
<p>有钱多好啊。</p>
<p>你开始懂得，有钱，就有家，你就有稳稳的确定感。</p>
<p><strong>Part3</strong></p>
<p><strong>离 28 岁只有四个月的时候，你失去了工作。</strong></p>
<p>是被动的失业，集团公司撤销了华南办事处，象征性地补偿后，你被遣散了。</p>
<p>你开始重新找工作，从这个城市的南边，奔波到北边。</p>
<p>你突然发现，过了 30 以后，工作越来越难找了。</p>
<p>要么是薪水太低，要么是要求太高，一大群刚出校门的大学生，等在面试室外，随时准备把你 PK 掉。</p>
<p><strong>还完 3 个月的房贷，你突然发现，卡里只剩下 1000 块钱了。</strong></p>
<p>幸运的是，你终于赶在 28 岁前，找到了新工作。</p>
<p>虽然公司距离住的地方，有点远，但一切看起来，都是有希望的样子。</p>
<p>所以，28 岁生日那天，你特意给自己点了一个小小的蛋糕。烛光里，你安静的许愿。</p>
<p>不是为了犒劳自己。</p>
<p>而是你开始懂得，有时候，稳定的收入，也是有温度的。</p>
<p>它能免你惊，免你苦，免你无枝可依。</p>
<p><strong>Part4</strong></p>
<p><strong>转眼，你 32 岁了，成了别人眼里的中产。</strong></p>
<p>日子过得波澜不惊，一切都走上了正轨，孩子也已经 3 岁，该上幼儿园了。</p>
<p>你有两种选择：楼下的双语幼稚园；或者是把他送到隔壁安置小区，那里也有一家民营的幼教机构。</p>
<p>前一家，每月费用 4000，有外教。后一家，1800 就够了，老师都是中年的阿姨。</p>
<p>你在电脑上，看了一晚上的虐童新闻，第二天早餐时，你和妻子说：</p>
<blockquote>
<p>就去那家 4000 块的优质幼儿园吧。</p>
</blockquote>
<p>你没有和妻子说，这段时间，公司正在进行岗位调整。</p>
<p>你准备申请调岗，从现在悠闲的办公室工作，调到一线工作部门。虽然会累些，但收入会增加不少。</p>
<p><strong>知道调岗的消息后，妻子果然抱怨了你，说你不自量力。</strong></p>
<p>你没有辩解，相反你在心里笑了。</p>
<p>因为你开始懂了，累是累些，但至少在孩子需要时，你不会囊中羞涩，你不会让他在起跑线上就输了。</p>
<p><strong>Part5</strong></p>
<p><strong>又过了三年。</strong></p>
<p>所有的事情，都在向好处发展，你甚至有了野心勃勃的计划，等父母都退休了，就把他们接到身边来。</p>
<p>但清晨，母亲的电话就来了，父亲在晨练时突发脑溢血，县城的医院束手无策。</p>
<p>你疯了地开车，往老家赶，把父母接到了你住的一线城市里。</p>
<p>你相信，这里有优质的医疗资源，有一流的医生，一切会重新回到原来的样子。</p>
<p>在那家三甲医院里，科室里的医生，果然都给出了肯定的回答，你的父亲，也一天天好起来。</p>
<p><strong>但每天几千块的支出，很快就让你感觉到了压力。父亲的医保证，在这里形同废纸。</strong></p>
<p>两个月后，父亲坚持要出院。你不肯，但父亲用含糊的固执的声音告诉你，剩下的，就是康复训练了，老家也可以，哪里都一样。</p>
<p>你送他们回家，平时三个小时的路程，你开了六个小时。</p>
<p>因为你总是忍不住，想爬在方向盘上想哭。</p>
<p>父母老去的速度，比你想象的快多了。</p>
<p>你开始懂了，钱有时也是孝心。如果你有足够的钱，就不会对父母无能为力。</p>
<p><strong>Part6</strong></p>
<p>如果你没有经历过买房，你不会知道钱有多重要；</p>
<p>如果你没有经历过家人生病，你不会知道，钱是多么不可或缺；</p>
<p>如果你没有过月薪三千的生活，你不会知道，赚钱是为了什么。</p>
<p>在《亲爱的安德烈》里，作家龙应台有一段话说的很好：</p>
<blockquote>
<p>“孩子，我要求你读书用功，不是因为我要你跟别人比成绩，而是，我希望你将来会拥有选择的权利，选择有意义、有时间的工作，而不是被迫谋生。”</p>
</blockquote>
<p>同样，为什么年轻时要努力赚钱？</p>
<p><strong>不是为了成为富豪，也不是为了享受。</strong></p>
<p>而是有一天，你有底气说，我可过上更好的生活；</p>
<p>你也有底气对亲人说，亲爱的，别怕，一切有我。</p>
<p>王尔德说：</p>
<blockquote>
<p>“我年轻时还以为金钱最重要，如今年纪大了，发现那句话一点不假。”</p>
</blockquote>
<p>千万别在年轻时假装不爱钱，你应该更努力一些。</p>
<p><strong>我们努力赚钱，就是为了不对亲人无能为力，就是为了能够对世界说 “不”。</strong></p>
<p>你为什么年轻时要多赚钱？这是我听过的最好的回答。</p>
<ul>
<li>作者简介：王耳朵先生，青年作家，知名媒体前首席记者，关注于职场和个人成长，千万级阅读代表作《别扯了，这世界上根本没有稳定的工作》，微信公众号：王耳朵先生（ID：huangezishiba）。转载请联系原作者授权！</li>
</ul>
<p>— THE END —</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_gif/mTzGsLCNvribcZPNdfZUzENkKhDafiaCqARhGjSB9lWicSctia48SvEicSINjd6WhiaXlfuVnmmXSM0veibjeOxjPBvuA/?wx_fmt=gif" alt=""></p>
<p>本文地址 <a href="https://blog.coder4j.cn/2018/01/06/转-为什么年轻时要多赚钱？/">https://blog.coder4j.cn/2018/01/06/转-为什么年轻时要多赚钱？/</a> </p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[[转] springboot 过滤器和拦截器的实现和区别]]></title>
      <url>https://blog.coder4j.cn/2018/01/02/%E8%BD%AC-springboot-%E8%BF%87%E6%BB%A4%E5%99%A8%E5%92%8C%E6%8B%A6%E6%88%AA%E5%99%A8%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%92%8C%E5%8C%BA%E5%88%AB/</url>
      <content type="html"><![CDATA[<blockquote>
<p>本文由 <a href="http://ksria.com/simpread/" target="_blank" rel="external">简悦 SimpRead</a> 转码， 原文地址 <a href="https://segmentfault.com/a/1190000012072060" target="_blank" rel="external">https://segmentfault.com/a/1190000012072060</a></p>
</blockquote>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>springmvc 中有两种很普遍的 AOP 实现：<br>1. 过滤器（Filter）<br>2. 拦截器（Interceptor）</p>
<p>本篇面对的是一些刚接触 springboot 的人群<br>所以主要讲解 filter 和 interceptor 的简单实现和它们之间到底有什么区别<br>（一些复杂的功能我会之后发出文章，请记得关注）</p>
<h2 id="Filter-的简单实现"><a href="#Filter-的简单实现" class="headerlink" title="Filter 的简单实现"></a>Filter 的简单实现</h2><p>字面意思：过滤器就是过滤的作用，在 web 开发中过滤一些我们指定的 url<br>那么它能帮我们过滤什么呢？<br>那功能可就多了：<br>比如过拦截掉我们不需要的接口请求<br>修改请求（request）和响应（response）内容<br>完成 CORS 跨域请求等等</p>
<p>现在我们来实现一个简单的过滤器：<br>可以新建一个 filter 包，随着项目的扩大过滤器会越来越多<br>在这里我新建了一个<code>TestFilter</code>类，实现 Filter 接口</p>
<pre><code>@Component
@WebFilter(urlPatterns = &quot;/Blogs&quot;,filterName = &quot;blosTest&quot;)
public class TestFilter implements Filter{}
</code></pre><p>我们一步步来<br>1.@Component 就是把这个类注入到 IOC 容器中<br>2.@WebFilter(urlPatterns = “/Blogs”,filterName = “blosTest”) 说明这是一个 web 过滤器，它拦截的 url 为<code>/Blogs</code>，过滤器名字为<code>blogsTest</code></p>
<p>下面贴出实现接口之后的三个重构方法：</p>
<pre><code>@Override
    public void init(FilterConfig filterConfig) throws ServletException {

    }

    @Override
    public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain) throws IOException, ServletException {
        HttpServletRequest request= (HttpServletRequest) servletRequest;
        HttpServletResponse response = (HttpServletResponse) servletResponse;
        System.out.printf(&quot;过滤器实现&quot;);
        filterChain.doFilter(request,response);
    }

    @Override
    public void destroy() {

    }
</code></pre><p>初始化（init）和摧毁（destroy）方法一般不会用到，具体使用看下源码便知<br>doFilter（）是过滤器的核心<br>注意：在实现接口方法之后，我们要转换 request 和 response 类型至 HttpServlet，否则接下去的操作可能会报错。<br>如果过滤通过，执行<code>filterChain.doFilter(request,response);</code><br>说明这个 url 已经经过了我们的 Filter<br>其他不要设置，我们执行看下结果：</p>
<p><img src="https://segmentfault.com/img/bVYOwA?w=806&amp;h=168" alt=""></p>
<p><img src="https://segmentfault.com/img/bVYOwD?w=708&amp;h=182" alt=""></p>
<p>可以看到，只需要一个类我们就实现了一个简单的过滤器</p>
<p>当然可以不用注解的方式，配置启动类</p>
<pre><code>//过滤器
    @Bean
    public FilterRegistrationBean filterRegistrationBean(){
        FilterRegistrationBean filterRegistrationBean = new FilterRegistrationBean();
        List&lt;String&gt; urlPatterns = new ArrayList&lt;String&gt;();

        TestFilter testFilter = new TestFilter();   //new过滤器
        urlPatterns.add(&quot;/Blogs&quot;);      //指定需要过滤的url
        filterRegistrationBean.setFilter(testFilter);       //set
        filterRegistrationBean.setUrlPatterns(urlPatterns);     //set

        return filterRegistrationBean;
    }
</code></pre><p>这也是可以的，本人其实还是比较推荐这种方式添加过滤器</p>
<h2 id="Interceptor-的简单实现"><a href="#Interceptor-的简单实现" class="headerlink" title="Interceptor 的简单实现"></a>Interceptor 的简单实现</h2><p>拦截器的实现比过滤器稍微复杂一点<br>我们同样可以新建一个 interceptor 包<br>在里面新建一个名为<code>MyInterceptor</code>的类</p>
<pre><code>public class MyInterceptor implements HandlerInterceptor {}
</code></pre><p>这个类实现了<code>HandleInterceptor</code>接口<br>直接贴类代码，我会在代码中注释功能</p>
<pre><code>public class MyInterceptor implements HandlerInterceptor {
    //在请求处理之前进行调用（Controller方法调用之前
    @Override
    public boolean preHandle(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, Object o) throws Exception {
        System.out.printf(&quot;preHandle被调用&quot;);
        return true;    //如果false，停止流程，api被拦截
    }

    //请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
    @Override
    public void postHandle(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, Object o, ModelAndView modelAndView) throws Exception {
        System.out.println(&quot;postHandle被调用&quot;);
    }

    //在整个请求结束之后被调用，也就是在DispatcherServlet 渲染了对应的视图之后执行（主要是用于进行资源清理工作）
    @Override
    public void afterCompletion(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, Object o, Exception e) throws Exception {
        System.out.println(&quot;afterCompletion被调用&quot;);
    }
}
</code></pre><p>它依次实现了三个方法<br>相比过滤器，拦截器还需要在 springmvc 中注入<br>所以我们打开启动类，写入以下代码</p>
<pre><code>public class WarApplication {

    public static void main(String[] args) {
        SpringApplication.run(WarApplication.class, args);
    }

    //mvc控制器
    //@Configuration
    static class WebMvcConfigurer extends WebMvcConfigurerAdapter{
        //增加拦截器
        public void addInterceptors(InterceptorRegistry registry){
            registry.addInterceptor(new MyInterceptor())    //指定拦截器类
                    .addPathPatterns(&quot;/Handles&quot;);        //指定该类拦截的url
        }
    }
}
</code></pre><p>这里我在<code>/Handles</code>这个 url 中进行拦截<br>代码写完了，来看下结果</p>
<p><img src="https://segmentfault.com/img/bVYOyA?w=722&amp;h=200" alt=""></p>
<p><img src="https://segmentfault.com/img/bVYOyI?w=652&amp;h=194" alt=""></p>
<p>当进入指定 url 时，我们执行到了拦截器<br>接下来就可以根据需求去使用拦截器了</p>
<h2 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h2><p>过滤器和拦截器非常相似，但是它们有很大的区别<br>最简单明了的区别就是<strong>过滤器可以修改 request，而拦截器不能</strong><br><strong>过滤器需要在 servlet 容器中实现，拦截器可以适用于 javaEE，javaSE 等各种环境</strong><br><strong>拦截器可以调用 IOC 容器中的各种依赖，而过滤器不能</strong><br><strong>过滤器只能在请求的前后使用，而拦截器可以详细到每个方法</strong><br>区别很多，大家可以去查下</p>
<p>总的来说<br>过滤器就是筛选出你要的东西，比如 requeset 中你要的那部分<br>拦截器在做安全方面用的比较多，比如终止一些流程<br>网上有一张图片很不错，这里拷过来给大家看一下</p>
<p><img src="https://segmentfault.com/img/bVYOEG?w=1392&amp;h=808" alt=""></p>
<p><strong>以上便是 springboot 中过滤器和拦截器的实现和区别；</strong><br><strong>觉得还可以的请点个赞，赞不了也可以收藏下；</strong><br><strong>总之，谢谢阅读～</strong></p>
<p>本文地址 <a href="https://blog.coder4j.cn/2018/01/02/转-springboot-过滤器和拦截器的实现和区别/">https://blog.coder4j.cn/2018/01/02/转-springboot-过滤器和拦截器的实现和区别/</a> </p>
]]></content>
      
        <categories>
            
            <category> 转载 </category>
            
            <category> spring boot </category>
            
        </categories>
        
        
        <tags>
            
            <tag> spring boot </tag>
            
            <tag> 过滤器 </tag>
            
            <tag> 拦截器 </tag>
            
            <tag> web </tag>
            
            <tag> 转载 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[使用 docker 光速安装 gitlab]]></title>
      <url>https://blog.coder4j.cn/2018/01/01/%E4%BD%BF%E7%94%A8-docker-%E5%85%89%E9%80%9F%E5%AE%89%E8%A3%85-gitlab/</url>
      <content type="html"><![CDATA[<ul>
<li>使用 docker 安装 gitlab<pre><code># 安装 postgresql
docker run --name=gitlab-postgresql -d --env DB_NAME=gitlabhq_prodution --env DB_USER=gitlab --env DB_PASS=password sameersbn/postgresql:9.4-12
# 安装 redis
docker run --name gitlab-redis -d sameersbn/redis
# 安装 gitlab
docker run --name gitlab -d --link gitlab-postgresql:postgresql --link gitlab-redis:redisio --publish 10022:22 --publish 10080:80 --env GITLAB_PORT=10080 --env GITLAB_SSH_PORT=10022 --env GITLAB_SECRETS_DB_KEY_BASE=long-and-random-alpha-numeric-string sameersbn/gitlab:8.4.4
</code></pre></li>
<li>访问 <a href="http://本地ip:10080" target="_blank" rel="external">http://本地ip:10080</a><br><img src="http://ww1.sinaimg.cn/large/68f7efe0gy1fn1jbcqanij21ro11sq8s.jpg" alt=""></li>
</ul>
<ul>
<li>参考链接<br><a href="https://github.com/sameersbn/docker-gitlab" target="_blank" rel="external">docker-gitlab</a><br><a href="http://www.damagehead.com/docker-gitlab/" target="_blank" rel="external">Zero to GitLab in 5 seconds or less*</a>  </li>
</ul>
<p>本文地址 <a href="https://blog.coder4j.cn/2018/01/01/使用-docker-光速安装-gitlab/">https://blog.coder4j.cn/2018/01/01/使用-docker-光速安装-gitlab/</a> </p>
]]></content>
      
        <categories>
            
            <category> docker </category>
            
            <category> gitlab </category>
            
        </categories>
        
        
        <tags>
            
            <tag> docker </tag>
            
            <tag> gitlab </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[使用 docker 光速安装 wordpress]]></title>
      <url>https://blog.coder4j.cn/2018/01/01/%E4%BD%BF%E7%94%A8-docker-%E5%85%89%E9%80%9F%E5%AE%89%E8%A3%85-workdpress/</url>
      <content type="html"><![CDATA[<ul>
<li>使用 docker 安装 wordpress</li>
</ul>
<pre><code># 安装数据库
docker run --name db --env MYSQL_ROOT_PASSWORD=example -d mariadb

# 安装 wordpress
docker run --name MyWordPress --link db:mysql -p 8080:80 -d wordpress
</code></pre><p>安装成功效果图<br><img src="http://ww1.sinaimg.cn/large/68f7efe0gy1fn1igx342oj21sc0tsdjn.jpg" alt=""></p>
<ul>
<li>命令解析  <ul>
<li>安装数据库<pre><code>  docker run --name db --env MYSQL_ROOT_PASSWORD=example -d mariadb
</code></pre><ul>
<li>docker run <ul>
<li>启动容器的命令</li>
</ul>
</li>
<li>–name db<ul>
<li>指定启动容器的名称</li>
</ul>
</li>
<li>–env MYSQL_ROOT_PASSWORD=example<ul>
<li>传入环境变量，此处是设置 mysql 密码为 example</li>
</ul>
</li>
<li>-d <ul>
<li>后台运行，否则前台进行</li>
</ul>
</li>
</ul>
</li>
<li>安装 wordpress<pre><code>  docker run --name MyWordPress --link db:mysql -p 8080:80 -d wordpress
</code></pre><ul>
<li>–link db:mysql<ul>
<li>与上面启动的 db 容器建立联系</li>
</ul>
</li>
<li>-p 8080:80<ul>
<li>端口映射，把宿主机的8080端口映射到容器内的80端口</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>本文地址 <a href="https://blog.coder4j.cn/2018/01/01/使用-docker-光速安装-workdpress/">https://blog.coder4j.cn/2018/01/01/使用-docker-光速安装-workdpress/</a> </p>
]]></content>
      
        <categories>
            
            <category> docker </category>
            
            <category> wordpress </category>
            
        </categories>
        
        
        <tags>
            
            <tag> docker </tag>
            
            <tag> wordpress </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[2018年新年愿景]]></title>
      <url>https://blog.coder4j.cn/2018/01/01/2018%E5%B9%B4%E6%96%B0%E5%B9%B4%E6%84%BF%E6%99%AF/</url>
      <content type="html"><![CDATA[<div class="tip"><br>  今天是2018年第一天，转眼2017就这样过去了，感觉荒废了大把时光，新的一年希望自己可以蜕变！<br>  成为一个靠谱的人！<br></div>

<ul>
<li><p>生活</p>
<ul>
<li>更爱萍萍，以后少怼她了。别太孩子气，老惹她生气。</li>
<li>也该考虑结婚的事了</li>
<li>学会几个拿手菜</li>
<li>活的健康一点，少吃辣，少熬夜，少喝碳酸饮料</li>
<li>减肥，回到120斤</li>
<li>看几本书</li>
<li>一个星期写一篇博客</li>
</ul>
</li>
<li><p>学习</p>
<ul>
<li>docker学习</li>
<li>elasticsearch学习</li>
<li>zookeeper学习</li>
<li>mongodb学习</li>
<li>jvm学习</li>
<li>设计模式学习</li>
<li>nginx学习</li>
<li>hadoop学习</li>
<li>hbase 学习</li>
<li>架构学习</li>
</ul>
</li>
<li><p>工作</p>
<ul>
<li>提高工作效率，不要那么累</li>
<li>提高管理能力与人际交往能力</li>
<li>提高代码的可读性，可用性</li>
<li>对业务的熟练度要提高</li>
<li>使服务器的稳定性提升一个档次，全力做到0事故，0宕机</li>
</ul>
</li>
</ul>
<p>本文地址 <a href="https://blog.coder4j.cn/2018/01/01/2018年新年愿景/">https://blog.coder4j.cn/2018/01/01/2018年新年愿景/</a> </p>
]]></content>
      
        <categories>
            
            <category> 新年愿景 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 2018 </tag>
            
            <tag> 新年愿景 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Spring boot 对于 js 的 long 精度问题处理]]></title>
      <url>https://blog.coder4j.cn/2018/01/01/Spring-boot-%E5%AF%B9%E4%BA%8E-js-%E7%9A%84-long-%E7%B2%BE%E5%BA%A6%E9%97%AE%E9%A2%98%E5%A4%84%E7%90%86/</url>
      <content type="html"><![CDATA[<p>这几天前后端联调，遇到一个诡异的问题。前端请求后端提供的详情接口得到用户的 Id 与其它数据。然后前端又把这个 Id与修改的数据内容一同传回后端的修改接口。结果前端反馈死活修改不了。  </p>
<p>然后各种 debug 查日志，发现详情接口返回给前端的与前端调用修改接口传回的 Id 不一致。  </p>
<p>然后一查发现是 js 的精度问题，原以为 js 只是浮点型会有精度问题，没想到长整型也会出现。因为是语言的限制，前端要解决这个问题，还是很吃力的。所以只能在后端在传 json 的时候把 long 全部转成 string 类型。  </p>
<p>然后问题又来了，因为项目已写了差不多了。太多地方用了 long 类型，改基础类的字段类型是不可能了。于是想在对象转 json 的时候能否统一处理。  </p>
<p>因为使用的是 spring boot 框架，而 spring boot 默认的 json 框架的Jackson。就是找了一下，果然 jackson 有一个可以自定义的类型转换器机制。直接上代码↓  </p>
<ul>
<li><p>json 转换器<br>JsonLong2StrConverter</p>
<pre><code>public class JsonLong2StrConverter extends StdSerializer&lt;Long&gt; {

  public JsonLong2StrConverter() {
    super(Long.class);
  }

  @Override
  public void serialize(Long value, JsonGenerator gen, SerializerProvider provider)
      throws IOException {

    gen.writeString(value.toString());
  }
}
</code></pre></li>
<li><p>使用配置<br>JsonConf</p>
<pre><code>@Configuration
@EnableWebMvc
public class JsonConf extends WebMvcConfigurerAdapter {

  @Override
  public void configureMessageConverters(List&lt;HttpMessageConverter&lt;?&gt;&gt; converters) {
    converters.add(new MappingJackson2HttpMessageConverter(
        new Jackson2ObjectMapperBuilder()
//            .propertyNamingStrategy(PropertyNamingStrategy.SNAKE_CASE)
            .serializationInclusion(
                Include.NON_NULL)
            .serializerByType(Long.class, new JsonLong2StrConverter())
            .serializerByType(Long.TYPE, new JsonLong2StrConverter()).build()));
  }

}
</code></pre></li>
</ul>
<p>这样 spring boot 在转换 json 时，发现是 Long 类型就直接转成 String 类型，也就是加个单引号。</p>
<p>参考：<br><a href="http://okeeper.leanote.com/post/Spring-boot-%E9%85%8D%E7%BD%AE%E8%87%AA%E5%AE%9A%E4%B9%89Json%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2" target="_blank" rel="external">Spring boot 配置自定义Json类型转换</a></p>
<p>本文地址 <a href="https://blog.coder4j.cn/2018/01/01/Spring-boot-对于-js-的-long-精度问题处理/">https://blog.coder4j.cn/2018/01/01/Spring-boot-对于-js-的-long-精度问题处理/</a> </p>
]]></content>
      
        <categories>
            
            <category> spring boot </category>
            
            <category> json </category>
            
        </categories>
        
        
        <tags>
            
            <tag> spring boot </tag>
            
            <tag> json </tag>
            
            <tag> 精度 </tag>
            
            <tag> js </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CDN原理]]></title>
      <url>https://blog.coder4j.cn/2017/03/18/CDN%E5%8E%9F%E7%90%86/</url>
      <content type="html"><![CDATA[<blockquote>
<p>&emsp;&emsp;CDN是构建在网络之上的内容分发网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。CDN的关键技术主要有内容存储和分发技术。<br>&emsp;&emsp;CDN的基本原理是广泛采用各种缓存服务器，将这些缓存服务器分布到用户访问相对集中的地区或网络中，在用户访问网站时，利用全局负载技术将用户的访问指向距离最近的工作正常的缓存服务器上，由缓存服务器直接响应用户请求。  –百度百科</p>
</blockquote>
<p>&emsp;&emsp;其实CDN说白了，就是一个分布式缓存。只不过是CDN机构会把在全国各地热点的地方，部署一些服务器。如果你的网站使用CDN后，会把你网站上<strong>静态</strong>的内容缓存在这些服务器上。如果用户访问你的网站，用户的请求会被发送到离他最近的CDN服务器上，以此提高响应速度。</p>
<p>&emsp;&emsp;对于<strong>静态</strong>内容居多的网站，提速明显。对于<strong>动态网站</strong>会回源到原服务器，基本上没有任何提高。所以要想达到最好效果，可以对网站实现动静分离，比如前后端分离。把前端页面加到CDN，而后端接口还是用原服务器的。</p>
<p>&emsp;&emsp;随便说一下，CDN对DDOS有一定的防护作用，因为全国大量的肉鸡访问会被分散到各个CDN服务器，对主站影响就减小很多。当然也是只针对于静态类型有效，动态网站该挂还是会挂！</p>
<p>本文地址 <a href="https://blog.coder4j.cn/2017/03/18/CDN原理/">https://blog.coder4j.cn/2017/03/18/CDN原理/</a> </p>
]]></content>
      
        <categories>
            
            <category> 架构 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> cdn </tag>
            
            <tag> 架构 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[maven按环境加载配置文件]]></title>
      <url>https://blog.coder4j.cn/2017/03/11/maven%E6%8C%89%E7%8E%AF%E5%A2%83%E5%8A%A0%E8%BD%BD%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</url>
      <content type="html"><![CDATA[<p>通过maven的profile实现按环境来加载配置文件<br><a id="more"></a></p>
<h6 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h6><p><img src="/images/pasted-0.png" alt="upload successful"></p>
<h6 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h6><pre class="line-numbers language-xml"><code class="language-xml">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profiles</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profile</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>dev<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activation</span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activeByDefault</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activeByDefault</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activation</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>config.dir</span><span class="token punctuation">></span></span>dev<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>config.dir</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profile</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profile</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>config.dir</span><span class="token punctuation">></span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>config.dir</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profile</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profile</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>beta<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>config.dir</span><span class="token punctuation">></span></span>beta<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>config.dir</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profile</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profile</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>release<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>config.dir</span><span class="token punctuation">></span></span>release<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>config.dir</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profile</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profiles</span><span class="token punctuation">></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">></span></span>src/main/profile/${config.dir}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>targetPath</span><span class="token punctuation">></span></span>./<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>targetPath</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">></span></span>src/main/resources<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>targetPath</span><span class="token punctuation">></span></span>./<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>targetPath</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h5 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h5><blockquote>
<p>大致思路就是建一个profile的目录，这个目录名可以随意只要跟后面保持一致就行，然后在这个目录下面建几个按环境区分的目录，通常是dev(开发)，test（测试），beta（预发），release(正式)。然后再通过maven的profile特性，生成按环境的${config.dir}的值。最后通过maven的resources标签来完成配置文件的拷贝，大功告成。</p>
</blockquote>
<h5 id="打包命令"><a href="#打包命令" class="headerlink" title="打包命令"></a>打包命令</h5><pre><code>mvn clean install -P(profile_id)
eg. mvn clean install -Pdev  --打包开发环境的配置文件
</code></pre><p>本文地址 <a href="https://blog.coder4j.cn/2017/03/11/maven按环境加载配置文件/">https://blog.coder4j.cn/2017/03/11/maven按环境加载配置文件/</a> </p>
]]></content>
      
        <categories>
            
            <category> maven </category>
            
        </categories>
        
        
        <tags>
            
            <tag> maven </tag>
            
            <tag> profile </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[hexo搭建整理]]></title>
      <url>https://blog.coder4j.cn/2017/03/11/hexo-%E6%95%99%E7%A8%8B/</url>
      <content type="html"><![CDATA[<p>本博客搭建参考的教程<br><a id="more"></a></p>
<ul>
<li><p>基础教程：<br><a href="https://xuanwo.org/2015/03/26/hexo-intor/" target="_blank" rel="external">史上最详细的Hexo博客搭建图文教程</a></p>
</li>
<li><p>模板<br><a href="https://material.viosey.com/" target="_blank" rel="external">material</a></p>
</li>
<li><p>http转https:<br><a href="https://g2ex.github.io/2015/10/14/Hexo-with-SSL-Hosted-on-Github-Page/" target="_blank" rel="external">为Github的Hexo博客启用SSL/TLS</a></p>
</li>
<li><p>其它配置:<br><a href="http://www.jianshu.com/p/a52b68794a6b" target="_blank" rel="external">hexo创建个人博客（附加插入音乐、分享、评论、标签页、搜索）</a></p>
</li>
<li><p>访问分流:<br><a href="http://www.franktly.com/2016/07/05/Hexo%E5%90%8C%E6%97%B6%E9%83%A8%E7%BD%B2%E5%9C%A8Coding%E5%92%8CGitHub%E4%B8%8A%E5%B9%B6%E4%BD%BF%E7%94%A8DNSPod%E5%88%86%E6%B5%81/" target="_blank" rel="external">Hexo同时部署在Coding和GitHub上并使用DNSPod分流</a></p>
</li>
<li><p>SEO:<br><a href="http://www.jianshu.com/p/86557c34b671" target="_blank" rel="external">Hexo Seo优化让你的博客在google搜索排名第一</a><br><a href="http://www.jianshu.com/p/619dab2d3c08" target="_blank" rel="external">hexo提交搜索引擎（百度+谷歌）</a></p>
</li>
</ul>
<p>本文地址 <a href="https://blog.coder4j.cn/2017/03/11/hexo-教程/">https://blog.coder4j.cn/2017/03/11/hexo-教程/</a> </p>
]]></content>
      
        <categories>
            
            <category> hexo </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Spring Aop注解教程]]></title>
      <url>https://blog.coder4j.cn/2017/03/10/Spring-Aop%E6%B3%A8%E8%A7%A3%E6%95%99%E7%A8%8B/</url>
      <content type="html"><![CDATA[<blockquote>
<p>spring aop常用的有以下：</p>
<ul>
<li><p>通知类型：</p>
<ul>
<li>前置通知（Before advice）：在某连接点之前执行的通知，但这个通知不能阻止连接点之前的执行流程（除非它抛出一个异常）。</li>
<li>后置通知（After returning advice）：在某连接点正常完成后执行的通知：例如，一个方法没有抛出任何异常，正常返回。</li>
<li>异常通知（After throwing advice）：在方法抛出异常退出时执行的通知。</li>
<li>最终通知（After (finally) advice）：当某连接点退出的时候执行的通知（不论是正常返回还是异常退出）。</li>
<li>环绕通知（Around Advice）：包围一个连接点的通知，如方法调用。这是最强大的一种通知类型。环绕通知可以在方法调用前后完成自定义的行为。它也会选择是否继续执行连接点或直接返回它自己的返回值或抛出异常来结束执行。</li>
</ul>
</li>
<li><p>核心配置只要在AOP的实现方法上加上@Aspect与在spring 配置文件中加上 <aop:aspectj-autoproxy>,spring 就可以配置aop方法，然后再根据方法的增强标签不同的效果，这里需要注意是它们的参数不同。</aop:aspectj-autoproxy></p>
</li>
</ul>
</blockquote>
<ul>
<li><p>pom.xml</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span>
       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>
       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mrwood_study<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>xyz.mrwood.study<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">></span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">></span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>study-spring-aop<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>packaging</span><span class="token punctuation">></span></span>jar<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>packaging</span><span class="token punctuation">></span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>study-spring-aop<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>http://maven.apache.org<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project.build.sourceEncoding</span><span class="token punctuation">></span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project.build.sourceEncoding</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>spring.version</span><span class="token punctuation">></span></span>4.2.5.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>spring.version</span><span class="token punctuation">></span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>
      <span class="token comment" spellcheck="true">&lt;!-- spring开始 --></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-aop<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>${spring.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-tx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>${spring.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-beans<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>${spring.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-context<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>${spring.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>${spring.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-context-support<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>${spring.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>
      <span class="token comment" spellcheck="true">&lt;!--spring 结束--></span>

      <span class="token comment" spellcheck="true">&lt;!-- AOP begin --></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.aspectj<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>aspectjrt<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.7.4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.aspectj<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>aspectjweaver<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.7.4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>cglib<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>cglib<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>
      <span class="token comment" spellcheck="true">&lt;!-- AOP end --></span>

      <span class="token comment" spellcheck="true">&lt;!-- 日志开始 --></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>ch.qos.logback<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>logback-classic<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.1.7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">></span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">></span></span>
                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>slf4j-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>
                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.slf4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.slf4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>slf4j-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.7.21<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>
      <span class="token comment" spellcheck="true">&lt;!-- 日志结束 --></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>spring-context.xml</p>
</li>
</ul>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>
       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>
       <span class="token attr-name"><span class="token namespace">xmlns:</span>context</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/context<span class="token punctuation">"</span></span>
       <span class="token attr-name"><span class="token namespace">xmlns:</span>aop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/aop<span class="token punctuation">"</span></span>
       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

    <span class="token comment" spellcheck="true">&lt;!--自动注入--></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>component-scan</span> <span class="token attr-name">base-package</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>xyz.mrwood.study<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>

    <span class="token comment" spellcheck="true">&lt;!--开启aop--></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">aop:</span>aspectj-autoproxy</span><span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li>AopHandler.java</li>
</ul>
<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">/**
 * Copyright (c) 2016, 791650277@qq.com(Mr.kiwi) All Rights Reserved.
 */</span>
<span class="token keyword">package</span> xyz<span class="token punctuation">.</span>mrwood<span class="token punctuation">.</span>study<span class="token punctuation">.</span>aop<span class="token punctuation">;</span>

<span class="token keyword">import</span> org<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>JoinPoint<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>ProceedingJoinPoint<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>*<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Component<span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">/**
 * 项目：study
 * 包名：xyz.mrwood.study.aop
 * 功能：aop实现
 * 时间：2016-05-28 10:33
 * 作者：Mr.Kiwi
 * 通知类型：
 * 前置通知（Before advice）：在某连接点之前执行的通知，但这个通知不能阻止连接点之前的执行流程（除非它抛出一个异常）。
 * 后置通知（After returning advice）：在某连接点正常完成后执行的通知：例如，一个方法没有抛出任何异常，正常返回。
 * 异常通知（After throwing advice）：在方法抛出异常退出时执行的通知。
 * 最终通知（After (finally) advice）：当某连接点退出的时候执行的通知（不论是正常返回还是异常退出）。
 * 环绕通知（Around Advice）：包围一个连接点的通知，如方法调用。这是最强大的一种通知类型。环绕通知可以在方法调用前后完成自定义的行为。它也会选择是否继续执行连接点或直接返回它自己的返回值或抛出异常来结束执行。
 */</span>
<span class="token annotation punctuation">@Aspect</span>
<span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AopHandler</span> <span class="token punctuation">{</span>

    <span class="token comment" spellcheck="true">/**
     * 拦截工程下所有的切点
     */</span>
    <span class="token annotation punctuation">@Pointcut</span><span class="token punctuation">(</span><span class="token string">"execution(* xyz.mrwood.study..*.*(..))"</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getAllPoint</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">/**
     * 拦截所有service层下的切点
     */</span>
    <span class="token annotation punctuation">@Pointcut</span><span class="token punctuation">(</span><span class="token string">"execution(* xyz.mrwood.study.service..*.*(..))"</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getServicePoint</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>


    <span class="token comment" spellcheck="true">/**
     * 前置增强
     * @param joinPoint
     */</span>
    <span class="token annotation punctuation">@Before</span><span class="token punctuation">(</span><span class="token string">"getServicePoint()"</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">beforeMethod</span><span class="token punctuation">(</span>JoinPoint joinPoint<span class="token punctuation">)</span><span class="token punctuation">{</span>

        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"[前置增强开始]："</span> <span class="token operator">+</span> <span class="token string">"方法开始了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@AfterThrowing</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"getServicePoint()"</span><span class="token punctuation">,</span> throwing <span class="token operator">=</span> <span class="token string">"ex"</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">exceptionMethod</span><span class="token punctuation">(</span>JoinPoint joinPoint<span class="token punctuation">,</span> Exception ex<span class="token punctuation">)</span><span class="token punctuation">{</span>

        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"[异常增强]："</span> <span class="token operator">+</span> <span class="token string">"如果你看到这行，就说明你的程序报错了！"</span> <span class="token operator">+</span> <span class="token string">"异常信息："</span> <span class="token operator">+</span> ex<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">/**
     * 后置增强，只有在方法正常结束才会调用
     * @param returnVal
     */</span>
    <span class="token annotation punctuation">@AfterReturning</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"getServicePoint()"</span><span class="token punctuation">,</span>returning <span class="token operator">=</span> <span class="token string">"returnVal"</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">afterReturningMethod</span><span class="token punctuation">(</span>Object returnVal<span class="token punctuation">)</span><span class="token punctuation">{</span>

        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"[后置增强]："</span> <span class="token operator">+</span> <span class="token string">"当你看到这个说明，你的方法没有正常结束了！"</span> <span class="token operator">+</span> <span class="token string">"它的返回值为："</span> <span class="token operator">+</span> returnVal<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">/**
     * 最终增强，类似于finally的功能
     */</span>
    <span class="token annotation punctuation">@After</span><span class="token punctuation">(</span><span class="token string">"getServicePoint()"</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">afterMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>

        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"[最终增强]："</span> <span class="token operator">+</span> <span class="token string">"无论发论发生什么事，我都会运行！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">/**
     * 环绕增强
     * @param proceedingJoinPoint
     */</span>
    <span class="token annotation punctuation">@Around</span><span class="token punctuation">(</span><span class="token string">"getServicePoint()"</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> Object <span class="token function">aroundMethod</span><span class="token punctuation">(</span>ProceedingJoinPoint proceedingJoinPoint<span class="token punctuation">)</span> <span class="token keyword">throws</span> Throwable <span class="token punctuation">{</span>

        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"[环绕增强开始]："</span> <span class="token operator">+</span> <span class="token string">"方法开始了！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        Object returnVal <span class="token operator">=</span> proceedingJoinPoint<span class="token punctuation">.</span><span class="token function">proceed</span><span class="token punctuation">(</span>proceedingJoinPoint<span class="token punctuation">.</span><span class="token function">getArgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"[环绕增强结束]："</span> <span class="token operator">+</span> <span class="token string">"方法已经结束了！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> returnVal<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li>TargetService.java</li>
</ul>
<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">/**
 * Copyright (c) 2016, 791650277@qq.com(Mr.kiwi) All Rights Reserved.
 */</span>
<span class="token keyword">package</span> xyz<span class="token punctuation">.</span>mrwood<span class="token punctuation">.</span>study<span class="token punctuation">.</span>service<span class="token punctuation">;</span>

<span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Component<span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">/**
 * 项目：study
 * 包名：xyz.mrwood.study.service
 * 功能：被拦截的目标类
 * 时间：2016-05-28 10:32
 * 作者：Mr.Kiwi
 */</span>
<span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TargetService</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> String <span class="token function">hello</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span><span class="token punctuation">{</span>

        <span class="token keyword">return</span> <span class="token string">"hello "</span> <span class="token operator">+</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> String  <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>


        <span class="token keyword">return</span> <span class="token string">"test"</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li>运行结果<pre><code>[环绕增强开始]：方法开始了！
[前置增强开始]：方法开始了
[环绕增强结束]：方法已经结束了！
[最终增强]：无论发论发生什么事，我都会运行！
[后置增强]：当你看到这个说明，你的方法没有正常结束了！它的返回值为：test
</code></pre></li>
</ul>
<p>本文地址 <a href="https://blog.coder4j.cn/2017/03/10/Spring-Aop注解教程/">https://blog.coder4j.cn/2017/03/10/Spring-Aop注解教程/</a> </p>
]]></content>
      
        <categories>
            
            <category> spring </category>
            
            <category> aop </category>
            
        </categories>
        
        
        <tags>
            
            <tag> spring </tag>
            
            <tag> aop </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[spring 集成druid]]></title>
      <url>https://blog.coder4j.cn/2017/02/17/spring-%E9%9B%86%E6%88%90druid/</url>
      <content type="html"><![CDATA[<p><strong>application.properties</strong></p>
<pre class="line-numbers language-properties"><code class="language-properties"><span class="token comment" spellcheck="true">######################数据库访问配置#########################</span>
<span class="token comment" spellcheck="true"># 数据库链接</span>
<span class="token attr-name">spring.datasource.url</span><span class="token punctuation">=</span><span class="token attr-value">jdbc:mysql://localhost:3306/coder4j?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false</span>
<span class="token comment" spellcheck="true"># 数据库用户名</span>
<span class="token attr-name">spring.datasource.username</span><span class="token punctuation">=</span><span class="token attr-value">root</span>
<span class="token comment" spellcheck="true"># 数据库用户密码</span>
<span class="token attr-name">spring.datasource.password</span><span class="token punctuation">=</span><span class="token attr-value">root</span>
<span class="token comment" spellcheck="true"># 数据库驱动类</span>
<span class="token comment" spellcheck="true"># spring.datasource.driver-class-name=com.mysql.jdbc.Driver</span>
<span class="token comment" spellcheck="true"># mysql driver 6.0以后要使用下面的类</span>
<span class="token attr-name">spring.datasource.driver-class-name</span><span class="token punctuation">=</span><span class="token attr-value">com.mysql.cj.jdbc.Driver</span>
<span class="token comment" spellcheck="true"># 主数据源(这里使用的druid),如果是通过代码注入，这里没什么用</span>
<span class="token comment" spellcheck="true">#spring.datasource.type=com.alibaba.druid.pool.DruidDataSource</span>
<span class="token comment" spellcheck="true">######################数据库连接池配置#########################</span>
<span class="token comment" spellcheck="true"># sb1.3以前这样配置是可以直接注入的，1.4之后只支持几种内置的，所以我们要通过</span>
<span class="token comment" spellcheck="true"># 代码手动注入，代码配置优先级比配置文件的高</span>
<span class="token comment" spellcheck="true"># 初始化大小，最小，最大</span>
<span class="token attr-name">spring.datasource.initialSize</span><span class="token punctuation">=</span><span class="token attr-value">5</span>
<span class="token attr-name">spring.datasource.minIdle</span><span class="token punctuation">=</span><span class="token attr-value">5</span>
<span class="token attr-name">spring.datasource.maxActive</span><span class="token punctuation">=</span><span class="token attr-value">20</span>
<span class="token comment" spellcheck="true"># 配置获取连接等待超时的时间</span>
<span class="token attr-name">spring.datasource.maxWait</span><span class="token punctuation">=</span><span class="token attr-value">60000</span>
<span class="token comment" spellcheck="true"># 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒</span>
<span class="token attr-name">spring.datasource.timeBetweenEvictionRunsMillis</span><span class="token punctuation">=</span><span class="token attr-value">60000</span>
<span class="token comment" spellcheck="true"># 配置一个连接在池中最小生存的时间，单位是毫秒</span>
<span class="token attr-name">spring.datasource.minEvictableIdleTimeMillis</span><span class="token punctuation">=</span><span class="token attr-value">300000</span>
<span class="token attr-name">spring.datasource.validationQuery</span><span class="token punctuation">=</span><span class="token attr-value">SELECT 1 FROM DUAL</span>
<span class="token attr-name">spring.datasource.testWhileIdle</span><span class="token punctuation">=</span><span class="token attr-value">true</span>
<span class="token attr-name">spring.datasource.testOnBorrow</span><span class="token punctuation">=</span><span class="token attr-value">false</span>
<span class="token attr-name">spring.datasource.testOnReturn</span><span class="token punctuation">=</span><span class="token attr-value">false</span>
<span class="token comment" spellcheck="true"># 打开PSCache，并且指定每个连接上PSCache的大小</span>
<span class="token attr-name">spring.datasource.poolPreparedStatements</span><span class="token punctuation">=</span><span class="token attr-value">true</span>
<span class="token attr-name">spring.datasource.maxPoolPreparedStatementPerConnectionSize</span><span class="token punctuation">=</span><span class="token attr-value">20</span>
<span class="token comment" spellcheck="true"># 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙</span>
<span class="token attr-name">spring.datasource.filters</span><span class="token punctuation">=</span><span class="token attr-value">stat,wall,log4j</span>
<span class="token comment" spellcheck="true"># 通过connectProperties属性来打开mergeSql功能；慢SQL记录</span>
<span class="token attr-name">spring.datasource.connectionProperties</span><span class="token punctuation">=</span><span class="token attr-value">druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000</span>
<span class="token comment" spellcheck="true"># 合并多个DruidDataSource的监控数据</span>
<span class="token comment" spellcheck="true">#spring.datasource.useGlobalDataSourceStat=true</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>注意：spring boot 1.4以前版本，这些配置已经够了，spring boot会自动注入，但是之后的版本，只有几种内置的数据源可以通过配置注入，druid暂时没有内置，所以要通过代码注入</strong></p>
<p><strong>DruidConfig.java</strong></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">/**
 * Copyright (c) 2017, 791650277@qq.com(Mr.kiwi) All Rights Reserved.
 */</span>
<span class="token keyword">package</span> cn<span class="token punctuation">.</span>coder4j<span class="token punctuation">.</span>config<span class="token punctuation">;</span>

<span class="token keyword">import</span> com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>druid<span class="token punctuation">.</span>pool<span class="token punctuation">.</span>DruidDataSource<span class="token punctuation">;</span>
<span class="token keyword">import</span> com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>druid<span class="token punctuation">.</span>support<span class="token punctuation">.</span>http<span class="token punctuation">.</span>StatViewServlet<span class="token punctuation">;</span>
<span class="token keyword">import</span> com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>druid<span class="token punctuation">.</span>support<span class="token punctuation">.</span>http<span class="token punctuation">.</span>WebStatFilter<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>context<span class="token punctuation">.</span>properties<span class="token punctuation">.</span>ConfigurationProperties<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>FilterRegistrationBean<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletRegistrationBean<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Bean<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Configuration<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Primary<span class="token punctuation">;</span>

<span class="token keyword">import</span> javax<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>DataSource<span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">/**
 * 项目：jalfred
 * 包名：cn.coder4j
 * 功能：数据源druid的配置
 * 时间：2017-02-17 23:30
 * 作者：Mr.Kiwi
 */</span>
<span class="token annotation punctuation">@Configuration</span>
<span class="token comment" spellcheck="true">// Primary同名bean，会以些为准</span>
<span class="token annotation punctuation">@Primary</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DataSourceConfig</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token comment" spellcheck="true">// ConfigurationProperties会注入同名属性</span>
    <span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span><span class="token string">"spring.datasource"</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> DataSource <span class="token function">druidDataSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>

        DruidDataSource druidDataSource <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DruidDataSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> druidDataSource<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token comment" spellcheck="true">/**
     * 注册一个StatViewServlet
     * durid统计页面相关的servlet
     * @return
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> ServletRegistrationBean <span class="token function">druidStatViewServle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        ServletRegistrationBean servletRegistrationBean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServletRegistrationBean</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">StatViewServlet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"/druid2/*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token operator">/</span><span class="token operator">/</span>添加初始化参数：initParams

        <span class="token operator">/</span><span class="token operator">/</span>白名单：
        servletRegistrationBean<span class="token punctuation">.</span><span class="token function">addInitParameter</span><span class="token punctuation">(</span><span class="token string">"allow"</span><span class="token punctuation">,</span><span class="token string">"127.0.0.1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token operator">/</span><span class="token operator">/</span>IP黑名单 <span class="token punctuation">(</span>存在共同时，deny优先于allow<span class="token punctuation">)</span> <span class="token operator">:</span> 如果满足deny的话提示<span class="token operator">:</span>Sorry<span class="token punctuation">,</span> you are not permitted to view <span class="token keyword">this</span> page<span class="token punctuation">.</span>
        servletRegistrationBean<span class="token punctuation">.</span><span class="token function">addInitParameter</span><span class="token punctuation">(</span><span class="token string">"deny"</span><span class="token punctuation">,</span><span class="token string">"192.168.1.73"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token operator">/</span><span class="token operator">/</span>登录查看信息的账号密码<span class="token punctuation">.</span>
        servletRegistrationBean<span class="token punctuation">.</span><span class="token function">addInitParameter</span><span class="token punctuation">(</span><span class="token string">"loginUsername"</span><span class="token punctuation">,</span><span class="token string">"admin2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        servletRegistrationBean<span class="token punctuation">.</span><span class="token function">addInitParameter</span><span class="token punctuation">(</span><span class="token string">"loginPassword"</span><span class="token punctuation">,</span><span class="token string">"123456"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token operator">/</span><span class="token operator">/</span>是否能够重置数据<span class="token punctuation">.</span>
        servletRegistrationBean<span class="token punctuation">.</span><span class="token function">addInitParameter</span><span class="token punctuation">(</span><span class="token string">"resetEnable"</span><span class="token punctuation">,</span><span class="token string">"false"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> servletRegistrationBean<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>
     <span class="token operator">*</span> 注册一个：filterRegistrationBean
     <span class="token operator">*</span> 拦截要被druid统计的页面
     <span class="token operator">*</span> @<span class="token keyword">return</span>
     <span class="token operator">*</span><span class="token operator">/</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> FilterRegistrationBean <span class="token function">druidStatFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>

        FilterRegistrationBean filterRegistrationBean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FilterRegistrationBean</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">WebStatFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment" spellcheck="true">//添加过滤规则.</span>
        filterRegistrationBean<span class="token punctuation">.</span><span class="token function">addUrlPatterns</span><span class="token punctuation">(</span><span class="token string">"/*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment" spellcheck="true">//添加不需要忽略的格式信息.</span>
        filterRegistrationBean<span class="token punctuation">.</span><span class="token function">addInitParameter</span><span class="token punctuation">(</span><span class="token string">"exclusions"</span><span class="token punctuation">,</span><span class="token string">"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> filterRegistrationBean<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>本文地址 <a href="https://blog.coder4j.cn/2017/02/17/spring-集成druid/">https://blog.coder4j.cn/2017/02/17/spring-集成druid/</a> </p>
]]></content>
      
        <categories>
            
            <category> spring boot </category>
            
        </categories>
        
        
        <tags>
            
            <tag> spring boot </tag>
            
            <tag> druid </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[spring boot 集成 redis]]></title>
      <url>https://blog.coder4j.cn/2016/11/14/spring-boot-%E9%9B%86%E6%88%90-redis/</url>
      <content type="html"><![CDATA[<pre class="line-numbers language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!--集成redis--></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-data-redis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-propreties"><code class="language-propreties">######################redis配置#########################
# REDIS (RedisProperties)
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=localhost
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=0
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Autowired</span>  
<span class="token keyword">private</span> StringRedisTemplate stringRedisTemplate<span class="token punctuation">;</span>  
<span class="token annotation punctuation">@Resource</span>  
<span class="token keyword">private</span> RedisTemplate<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Users<span class="token operator">></span> redisTemplate<span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>然后就可以在类里使用了，使用泛型的时候如果用@Autowired按类型注入会报错，要用@Resource    </p>
</blockquote>
<p><em>如果方法想用缓存，要在配置类上加上@EnableCaching打开缓存，并且要在方法上加上@Cacheable(value = “getByUsername”)</em></p>
<p>本文地址 <a href="https://blog.coder4j.cn/2016/11/14/spring-boot-集成-redis/">https://blog.coder4j.cn/2016/11/14/spring-boot-集成-redis/</a> </p>
]]></content>
      
        
        <tags>
            
            <tag> spring boot </tag>
            
            <tag> redis </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[spring boot 集成监控]]></title>
      <url>https://blog.coder4j.cn/2016/10/12/spring-boot-%E9%9B%86%E6%88%90%E7%9B%91%E6%8E%A7/</url>
      <content type="html"><![CDATA[<pre class="line-numbers language-xml"><code class="language-xml">  <span class="token comment" spellcheck="true">&lt;!--spring boot 系统监控--></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-actuator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-security<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-properties"><code class="language-properties"><span class="token comment" spellcheck="true"># 对外开放监控</span>
<span class="token comment" spellcheck="true"># 将其它健康接口也暴露出去</span>
<span class="token attr-name">endpoints.health.sensitive</span> <span class="token punctuation">=</span> <span class="token attr-value">false</span>
<span class="token attr-name">management.security.enabled</span> <span class="token punctuation">=</span> <span class="token attr-value">false</span>
<span class="token comment" spellcheck="true"># 设置健康监控的应用名</span>
<span class="token comment" spellcheck="true">#management.context-path=/manage/api/</span>
<span class="token comment" spellcheck="true"># 开启基础鉴权</span>
<span class="token comment" spellcheck="true">#security.basic.enabled=true</span>
<span class="token comment" spellcheck="true"># 要鉴权路径</span>
<span class="token comment" spellcheck="true">#security.basic.path=/manage/api/*</span>
<span class="token comment" spellcheck="true">#security.user.name=admin</span>
<span class="token comment" spellcheck="true">#security.user.password=123456</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><em>不加security也可以使用，但是会报权限不足</em></p>
<blockquote>
<p>有两种方法解决这个问题，一个是加上security，做拦截，并且配置相应的账号密码。另一个配置上面所示的属性，对监控页面关闭默认权限验证，然后我们自己去实现</p>
</blockquote>
<p>本文地址 <a href="https://blog.coder4j.cn/2016/10/12/spring-boot-集成监控/">https://blog.coder4j.cn/2016/10/12/spring-boot-集成监控/</a> </p>
]]></content>
      
        <categories>
            
            <category> spring boot </category>
            
        </categories>
        
        
        <tags>
            
            <tag> spring boot </tag>
            
            <tag> 监控 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Tomcat配置https证书]]></title>
      <url>https://blog.coder4j.cn/2016/09/10/tomcat-https/</url>
      <content type="html"><![CDATA[<h1 id="Tomcat配置https证书"><a href="#Tomcat配置https证书" class="headerlink" title="Tomcat配置https证书"></a>Tomcat配置https证书</h1><blockquote>
<p>网上搜索出来大多数是通过keytool自已生成证书来完成，这种在工作很少用到（浏览器会报不安全）。以下是通过申请的证书配置过程。因为在配置中遇到了一些坑，记之  </p>
</blockquote>
<h4 id="1、准备证书与私钥"><a href="#1、准备证书与私钥" class="headerlink" title="1、准备证书与私钥"></a>1、准备证书与私钥</h4><p><code>demo.crt</code>  <code>demo.key</code></p>
<h4 id="2、合并证书"><a href="#2、合并证书" class="headerlink" title="2、合并证书"></a>2、合并证书</h4><pre><code>openssl pkcs12 -export -in demo.crt -inkey demo.key -out demo.p12 -name demo
</code></pre><blockquote>
<p>注意：<br>1、 demo.crt 是你的证书<br>2、 demo.key 是你的私钥<br>3、 demo.p12 是合并后的证书<br>4、-name 后面的demo是指定的别名，后面配置tomcat8.5之后的版本需要用到，要记住<br>5、执行这条命令要设置一个导出密码，后面要用到，要记住，最好6位以上  </p>
</blockquote>
<h4 id="3、生成keystore文件"><a href="#3、生成keystore文件" class="headerlink" title="3、生成keystore文件"></a>3、生成keystore文件</h4><pre><code>keytool -importkeystore -srckeystore demo.p12 -srcstoretype PKCS12 -destkeystore demo.jks
</code></pre><blockquote>
<p>注意：<br>1、demo.p12 是第二步生成的证书名<br>2、demo.jks 是生成的keystore文件名<br>3、执行这条命令会首先让你设置一个密码，这个密码后面配置会用到，要记住。然后验证上一步设置的密码。推荐该步骤设置的密码与上一步一致，如果不一致可能会出现错误详见 <a href="http://hw1287789687.iteye.com/blog/1965703" target="_blank" rel="external">java.security.UnrecoverableKeyException: Cannot recover key - 简单的幸福 - ITeye技术网站</a>   </p>
</blockquote>
<h4 id="4、配置tomcat"><a href="#4、配置tomcat" class="headerlink" title="4、配置tomcat"></a>4、配置tomcat</h4><p><code>tomcat 8.5 之前</code></p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Connector</span> <span class="token attr-name">SSLEnabled</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token attr-name">acceptCount</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">clientAuth</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span>
    <span class="token attr-name">disableUploadTimeout</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token attr-name">enableLookups</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">maxThreads</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>25<span class="token punctuation">"</span></span>
    <span class="token attr-name">port</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>8443<span class="token punctuation">"</span></span> <span class="token attr-name">keystoreFile</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>~/ssl/demo.jks<span class="token punctuation">"</span></span> <span class="token attr-name">keystorePass</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>123456<span class="token punctuation">"</span></span>
    <span class="token attr-name">protocol</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.apache.coyote.http11.Http11NioProtocol<span class="token punctuation">"</span></span> <span class="token attr-name">scheme</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https<span class="token punctuation">"</span></span>
    <span class="token attr-name">secure</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token attr-name">sslProtocol</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>TLS<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><code>tomcat 8.5 之后</code></p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Connector</span> <span class="token attr-name">port</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>8643<span class="token punctuation">"</span></span> <span class="token attr-name">protocol</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.apache.coyote.http11.Http11NioProtocol<span class="token punctuation">"</span></span>
<span class="token attr-name">maxThreads</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>150<span class="token punctuation">"</span></span> <span class="token attr-name">SSLEnabled</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SSLHostConfig</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Certificate</span> <span class="token attr-name">certificateKeystoreFile</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>~/ssl/demo.jks<span class="token punctuation">"</span></span>
<span class="token attr-name">certificateKeyAlias</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>demo<span class="token punctuation">"</span></span>
<span class="token attr-name">certificateKeystorePassword</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>123456<span class="token punctuation">"</span></span>
<span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>RSA<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>SSLHostConfig</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Connector</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>注意：<br>1、~_ssl_demo.jks  是你前面步骤生成的storekey文件的路径<br>2、123456 是前面第3步设置的密码<br>3、tomcat8.5之后有一个certificateKeyAlias这个是2步设置-name的值  </p>
</blockquote>
<h4 id="参数地址："><a href="#参数地址：" class="headerlink" title="参数地址："></a>参数地址：</h4><p><a href="http://blog.csdn.net/freeiceflame/article/details/50420059" target="_blank" rel="external">TOMCAT导入通过第三方证书机构获取的证书 - IceFlame博客频道 - CSDN.NET</a></p>
<p>  <a href="http://hw1287789687.iteye.com/blog/1965703" target="_blank" rel="external">java.security.UnrecoverableKeyException: Cannot recover key - 简单的幸福 - ITeye技术网站</a></p>
<p><a href="https://www.oschina.net/question/12_23148" target="_blank" rel="external">5分钟内搞定 Tomcat 的 SSL 配置 - 开源中国社区</a></p>
<p><a href="https://bbs.wosign.com/forum.php?mod=viewthread&amp;tid=2881" target="_blank" rel="external">tomcat 8.5+版本SSL证书部署-沃通CA官方论坛 -  专业数字证书论坛</a></p>
<p>本文地址 <a href="https://blog.coder4j.cn/2016/09/10/tomcat-https/">https://blog.coder4j.cn/2016/09/10/tomcat-https/</a> </p>
]]></content>
      
        <categories>
            
            <category> tomcat </category>
            
            <category> https </category>
            
        </categories>
        
        
        <tags>
            
            <tag> tomcat </tag>
            
            <tag> https </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[lombok使用教程]]></title>
      <url>https://blog.coder4j.cn/2016/09/01/lombok-base/</url>
      <content type="html"><![CDATA[<h1 id="Lombok"><a href="#Lombok" class="headerlink" title="Lombok"></a>Lombok</h1><h4 id="作用：帮使用者提高编码效率，减少重复与冗余的代码"><a href="#作用：帮使用者提高编码效率，减少重复与冗余的代码" class="headerlink" title="作用：帮使用者提高编码效率，减少重复与冗余的代码"></a>作用：帮使用者提高编码效率，减少重复与冗余的代码</h4><h4 id="原理：ASM-动态修改class文件"><a href="#原理：ASM-动态修改class文件" class="headerlink" title="原理：ASM  动态修改class文件"></a>原理：ASM  动态修改class文件</h4><hr>
<h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><h3 id="maven"><a href="#maven" class="headerlink" title="maven"></a>maven</h3><h4 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h4><pre class="line-numbers language-xml"><code class="language-xml">     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.16.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h4><pre class="line-numbers language-xml"><code class="language-xml">     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>lombok-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.16.6.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="idea"><a href="#idea" class="headerlink" title="idea"></a>idea</h3><ul>
<li>安装插件<br><img src="http://ww2.sinaimg.cn/large/68f7efe0gw1fb0hl2gmyzj20su0kagqg.jpg" alt=""></li>
</ul>
<hr>
<h1 id="常用注解："><a href="#常用注解：" class="headerlink" title="常用注解："></a>常用注解：</h1><h2 id="java-bean相关"><a href="#java-bean相关" class="headerlink" title="java bean相关"></a>java bean相关</h2><h3 id="Setter"><a href="#Setter" class="headerlink" title="@Setter"></a>@Setter</h3><ul>
<li><p><code>功能</code></p>
<blockquote>
<p>生成setter方法</p>
</blockquote>
</li>
</ul>
<ul>
<li><p><code>源码</code>     </p>
<pre class="line-numbers language-java"><code class="language-java">  <span class="token annotation punctuation">@Setter</span>
      <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LombokDemo</span> <span class="token punctuation">{</span>

          <span class="token keyword">private</span> Integer id<span class="token punctuation">;</span>
          <span class="token keyword">private</span> String name<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><code>编译后</code></li>
</ul>
<pre class="line-numbers language-java"><code class="language-java">
  <span class="token keyword">package</span> xyz<span class="token punctuation">.</span>mrwood<span class="token punctuation">.</span>study<span class="token punctuation">.</span>lombok<span class="token punctuation">;</span>

  <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LombokDemo</span> <span class="token punctuation">{</span>
      <span class="token keyword">private</span> Integer id<span class="token punctuation">;</span>
      <span class="token keyword">private</span> String name<span class="token punctuation">;</span>

      <span class="token keyword">public</span> <span class="token function">LombokDemo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setId</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="Getter"><a href="#Getter" class="headerlink" title="@Getter"></a>@Getter</h3><ul>
<li><p><code>功能</code></p>
<blockquote>
<p>生成getter方法</p>
</blockquote>
</li>
</ul>
<ul>
<li><p><code>源码</code></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Getter</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LombokDemo</span> <span class="token punctuation">{</span>

<span class="token keyword">private</span> Integer id<span class="token punctuation">;</span>
<span class="token keyword">private</span> String name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><code>编译后</code></li>
</ul>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> xyz<span class="token punctuation">.</span>mrwood<span class="token punctuation">.</span>study<span class="token punctuation">.</span>lombok<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LombokDemo</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> Integer id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">LombokDemo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> Integer <span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>id<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> String <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>​</p>
<h3 id="ToString"><a href="#ToString" class="headerlink" title="@ToString"></a>@ToString</h3><ul>
<li><p><code>功能</code></p>
<blockquote>
<p>生成toString方法</p>
</blockquote>
</li>
</ul>
<ul>
<li><p><code>源码</code></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@ToString</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LombokDemo</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> Integer id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p><code>编译后</code></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> xyz<span class="token punctuation">.</span>mrwood<span class="token punctuation">.</span>study<span class="token punctuation">.</span>lombok<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LombokDemo</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> Integer id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">LombokDemo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">"LombokDemo(id="</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">+</span> <span class="token string">", name="</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">")"</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>​</p>
</li>
</ul>
<h3 id="Getter-lazy-true"><a href="#Getter-lazy-true" class="headerlink" title="@Getter(lazy = true)"></a>@Getter(lazy = true)</h3><ul>
<li><p><code>功能</code></p>
<blockquote>
<p>懒加载属性</p>
</blockquote>
</li>
</ul>
<ul>
<li><p><code>注意:</code></p>
<blockquote>
<p>这个与上面@Getter不同，那个是修饰在类上的，也可以修饰在属性上。如果有lazy=true只能修饰在属性，并且还要是private final修饰，限制很大</p>
</blockquote>
</li>
<li><p><code>编码</code></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LombokDemo</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Getter</span><span class="token punctuation">(</span>lazy <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token keyword">private</span> <span class="token keyword">final</span> List<span class="token operator">&lt;</span>Integer<span class="token operator">></span> ids <span class="token operator">=</span> Arrays<span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p><code>编译后</code></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> xyz<span class="token punctuation">.</span>mrwood<span class="token punctuation">.</span>study<span class="token punctuation">.</span>lombok<span class="token punctuation">;</span>

<span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Arrays<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>atomic<span class="token punctuation">.</span>AtomicReference<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LombokDemo</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> AtomicReference<span class="token operator">&lt;</span>Object<span class="token operator">></span> ids <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicReference</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">LombokDemo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>Integer<span class="token operator">></span> <span class="token function">getIds</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        Object value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>ids<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>value <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            AtomicReference var2 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>ids<span class="token punctuation">;</span>
            <span class="token keyword">synchronized</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>ids<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>ids<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>value <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    List actualValue <span class="token operator">=</span> Arrays<span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>Integer<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Integer<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Integer<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Integer<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    value <span class="token operator">=</span> actualValue <span class="token operator">==</span> null<span class="token operator">?</span><span class="token keyword">this</span><span class="token punctuation">.</span>ids<span class="token operator">:</span>actualValue<span class="token punctuation">;</span>
                    <span class="token keyword">this</span><span class="token punctuation">.</span>ids<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> <span class="token punctuation">(</span>List<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span>List<span class="token punctuation">)</span><span class="token punctuation">(</span>value <span class="token operator">==</span> <span class="token keyword">this</span><span class="token punctuation">.</span>ids<span class="token operator">?</span>null<span class="token operator">:</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>​</p>
</li>
</ul>
<h3 id="EqualsAndHashCode"><a href="#EqualsAndHashCode" class="headerlink" title="@EqualsAndHashCode"></a>@EqualsAndHashCode</h3><ul>
<li><p><code>功能</code></p>
<blockquote>
<p>生成equals方法与hashCode方法</p>
</blockquote>
</li>
</ul>
<ul>
<li><code>源码</code></li>
</ul>
<pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@EqualsAndHashCode</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LombokDemo</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> Integer id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li><code>编译后</code></li>
</ul>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> xyz<span class="token punctuation">.</span>mrwood<span class="token punctuation">.</span>study<span class="token punctuation">.</span>lombok<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LombokDemo</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> Integer id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">LombokDemo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span>Object o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>o <span class="token operator">==</span> <span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>o <span class="token keyword">instanceof</span> <span class="token class-name">LombokDemo</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            LombokDemo other <span class="token operator">=</span> <span class="token punctuation">(</span>LombokDemo<span class="token punctuation">)</span>o<span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>other<span class="token punctuation">.</span><span class="token function">canEqual</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                Integer <span class="token keyword">this</span>$id <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>id<span class="token punctuation">;</span>
                Integer other$id <span class="token operator">=</span> other<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span>$id <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span>other$id <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span>$id<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>other$id<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                String <span class="token keyword">this</span>$name <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>
                String other$name <span class="token operator">=</span> other<span class="token punctuation">.</span>name<span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span>$name <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span>other$name <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span>$name<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>other$name<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">protected</span> <span class="token keyword">boolean</span> <span class="token function">canEqual</span><span class="token punctuation">(</span>Object other<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> other <span class="token keyword">instanceof</span> <span class="token class-name">LombokDemo</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">boolean</span> PRIME <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">byte</span> result <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        Integer $id <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>id<span class="token punctuation">;</span>
        <span class="token keyword">int</span> result1 <span class="token operator">=</span> result <span class="token operator">*</span> <span class="token number">59</span> <span class="token operator">+</span> <span class="token punctuation">(</span>$id <span class="token operator">==</span> null<span class="token operator">?</span><span class="token number">43</span><span class="token operator">:</span>$id<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        String $name <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>
        result1 <span class="token operator">=</span> result1 <span class="token operator">*</span> <span class="token number">59</span> <span class="token operator">+</span> <span class="token punctuation">(</span>$name <span class="token operator">==</span> null<span class="token operator">?</span><span class="token number">43</span><span class="token operator">:</span>$name<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> result1<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>​</p>
<h3 id="NoAragsConstructor"><a href="#NoAragsConstructor" class="headerlink" title="@NoAragsConstructor"></a>@NoAragsConstructor</h3><ul>
<li><p><code>功能</code></p>
<blockquote>
<p>添加一个无参构造函数</p>
</blockquote>
</li>
<li><p><code>注意</code></p>
<blockquote>
<p>这个注解在没有其它有参构造函数的情况下使用意义不大，因为在这种情况下java默认会添加一个无参构造函数</p>
</blockquote>
</li>
<li><p><code>源码</code></p>
<pre><code>@NoArgsConstructor
public class LombokDemo {

    private Integer id;
    private String name;
}
</code></pre></li>
<li><p><code>编译后</code></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> xyz<span class="token punctuation">.</span>mrwood<span class="token punctuation">.</span>study<span class="token punctuation">.</span>lombok<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LombokDemo</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> Integer id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">LombokDemo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>​</p>
</li>
</ul>
<h3 id="AllArgsConstructor"><a href="#AllArgsConstructor" class="headerlink" title="@AllArgsConstructor"></a>@AllArgsConstructor</h3><ul>
<li><p><code>功能</code></p>
<blockquote>
<p>添加一个所有参数的构造函数</p>
</blockquote>
</li>
</ul>
<ul>
<li><p><code>源码</code></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@AllArgsConstructor</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LombokDemo</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> Integer id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p><code>编译后</code></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> xyz<span class="token punctuation">.</span>mrwood<span class="token punctuation">.</span>study<span class="token punctuation">.</span>lombok<span class="token punctuation">;</span>

<span class="token keyword">import</span> java<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>ConstructorProperties<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LombokDemo</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> Integer id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@ConstructorProperties</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">"id"</span><span class="token punctuation">,</span> <span class="token string">"name"</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token function">LombokDemo</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">,</span> String name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>​</p>
</li>
</ul>
<h3 id="RequiredArgsConstructor"><a href="#RequiredArgsConstructor" class="headerlink" title="@RequiredArgsConstructor"></a>@RequiredArgsConstructor</h3><ul>
<li><p><code>功能</code></p>
<blockquote>
<p>生成一个包含必填参数的构造函数</p>
</blockquote>
</li>
<li><p><code>注意</code></p>
<blockquote>
<p>要与@NonNull 搭配使用，该注解修饰的属性就是必填参数</p>
</blockquote>
</li>
<li><p><code>源码</code></p>
<pre class="line-numbers language-jav"><code class="language-jav">@RequiredArgsConstructor
public class LombokDemo {

    @NonNull private Integer id;
    private String name;
}
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p><code>编译后</code></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> xyz<span class="token punctuation">.</span>mrwood<span class="token punctuation">.</span>study<span class="token punctuation">.</span>lombok<span class="token punctuation">;</span>

<span class="token keyword">import</span> java<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>ConstructorProperties<span class="token punctuation">;</span>
<span class="token keyword">import</span> lombok<span class="token punctuation">.</span>NonNull<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LombokDemo</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@NonNull</span>
    <span class="token keyword">private</span> Integer id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@ConstructorProperties</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">"id"</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token function">LombokDemo</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> Integer id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>id <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>​</p>
</li>
</ul>
<h3 id="Date"><a href="#Date" class="headerlink" title="@Date"></a>@Date</h3><ul>
<li><p><code>功能</code></p>
<blockquote>
<p>这是一个综合注解了，等于同时使用</p>
<p><code>@Getter</code>, <code>@Setter</code>, <code>@ToString</code>, <code>@EqualsAndHashCode</code>,<code>@RequiredArgsConstructor</code></p>
</blockquote>
</li>
<li><p><code>源码</code></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LombokDemo</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@NonNull</span> <span class="token keyword">private</span> Integer id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p><code>编译后</code></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> xyz<span class="token punctuation">.</span>mrwood<span class="token punctuation">.</span>study<span class="token punctuation">.</span>lombok<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LombokDemo</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> Integer id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">LombokDemo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> Integer <span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>id<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> String <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setId</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span>Object o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>o <span class="token operator">==</span> <span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>o <span class="token keyword">instanceof</span> <span class="token class-name">LombokDemo</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            LombokDemo other <span class="token operator">=</span> <span class="token punctuation">(</span>LombokDemo<span class="token punctuation">)</span>o<span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>other<span class="token punctuation">.</span><span class="token function">canEqual</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                Integer <span class="token keyword">this</span>$id <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                Integer other$id <span class="token operator">=</span> other<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span>$id <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span>other$id <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span>$id<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>other$id<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                String <span class="token keyword">this</span>$name <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                String other$name <span class="token operator">=</span> other<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span>$name <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span>other$name <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span>$name<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>other$name<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">protected</span> <span class="token keyword">boolean</span> <span class="token function">canEqual</span><span class="token punctuation">(</span>Object other<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> other <span class="token keyword">instanceof</span> <span class="token class-name">LombokDemo</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">boolean</span> PRIME <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">byte</span> result <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        Integer $id <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> result1 <span class="token operator">=</span> result <span class="token operator">*</span> <span class="token number">59</span> <span class="token operator">+</span> <span class="token punctuation">(</span>$id <span class="token operator">==</span> null<span class="token operator">?</span><span class="token number">43</span><span class="token operator">:</span>$id<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        String $name <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        result1 <span class="token operator">=</span> result1 <span class="token operator">*</span> <span class="token number">59</span> <span class="token operator">+</span> <span class="token punctuation">(</span>$name <span class="token operator">==</span> null<span class="token operator">?</span><span class="token number">43</span><span class="token operator">:</span>$name<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> result1<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">"LombokDemo(id="</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">", name="</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">")"</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>​</p>
</li>
</ul>
<h3 id="Value"><a href="#Value" class="headerlink" title="@Value"></a>@Value</h3><ul>
<li><p><code>功能</code></p>
<blockquote>
<p>不可变类的@Date, 他会默认给属性加上final</p>
</blockquote>
</li>
<li><p><code>源码</code></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Value</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LombokDemo</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> Integer id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p><code>编译后</code></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> xyz<span class="token punctuation">.</span>mrwood<span class="token punctuation">.</span>study<span class="token punctuation">.</span>lombok<span class="token punctuation">;</span>

<span class="token keyword">import</span> java<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>ConstructorProperties<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">LombokDemo</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> Integer id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> String name<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@ConstructorProperties</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">"id"</span><span class="token punctuation">,</span> <span class="token string">"name"</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token function">LombokDemo</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">,</span> String name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> Integer <span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>id<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> String <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span>Object o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>o <span class="token operator">==</span> <span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>o <span class="token keyword">instanceof</span> <span class="token class-name">LombokDemo</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            LombokDemo other <span class="token operator">=</span> <span class="token punctuation">(</span>LombokDemo<span class="token punctuation">)</span>o<span class="token punctuation">;</span>
            Integer <span class="token keyword">this</span>$id <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            Integer other$id <span class="token operator">=</span> other<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span>$id <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>other$id <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span>$id<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>other$id<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            String <span class="token keyword">this</span>$name <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            String other$name <span class="token operator">=</span> other<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span>$name <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>other$name <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span>$name<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>other$name<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">boolean</span> PRIME <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">byte</span> result <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        Integer $id <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> result1 <span class="token operator">=</span> result <span class="token operator">*</span> <span class="token number">59</span> <span class="token operator">+</span> <span class="token punctuation">(</span>$id <span class="token operator">==</span> null<span class="token operator">?</span><span class="token number">43</span><span class="token operator">:</span>$id<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        String $name <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        result1 <span class="token operator">=</span> result1 <span class="token operator">*</span> <span class="token number">59</span> <span class="token operator">+</span> <span class="token punctuation">(</span>$name <span class="token operator">==</span> null<span class="token operator">?</span><span class="token number">43</span><span class="token operator">:</span>$name<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> result1<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">"LombokDemo(id="</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">", name="</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">")"</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>​</p>
</li>
</ul>
<h3 id="Accessors"><a href="#Accessors" class="headerlink" title="@Accessors"></a>@Accessors</h3><ul>
<li><p><code>功能</code></p>
<blockquote>
<p>这个注解要搭配@Getter与@Setter使用，用来修改默认的setter与getter方法的形式</p>
</blockquote>
</li>
<li><p><code>注意</code></p>
<blockquote>
<p>@Accessors有三个参数可以使用</p>
<ol>
<li>chain  链式的形式</li>
<li>fluent  流式的形式</li>
<li>prefix  生成指定前缀的属性的getter与setter方法，并且生成的getter与setter方法时会去除前缀</li>
</ol>
</blockquote>
</li>
<li><p><code>源码 chain = true</code></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Accessors</span><span class="token punctuation">(</span>chain <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Setter</span>
<span class="token annotation punctuation">@Getter</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LombokDemo</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> Integer id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p><code>编译后 chain = true</code></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> xyz<span class="token punctuation">.</span>mrwood<span class="token punctuation">.</span>study<span class="token punctuation">.</span>lombok<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LombokDemo</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> Integer id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">LombokDemo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> LombokDemo <span class="token function">setId</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> LombokDemo <span class="token function">setName</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> Integer <span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>id<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> String <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p><code>源码 fluent = true</code></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Accessors</span><span class="token punctuation">(</span>fluent <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Setter</span>
<span class="token annotation punctuation">@Getter</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LombokDemo</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> Integer id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p><code>编译后 fluent = true</code></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> xyz<span class="token punctuation">.</span>mrwood<span class="token punctuation">.</span>study<span class="token punctuation">.</span>lombok<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LombokDemo</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> Integer id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">LombokDemo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> LombokDemo <span class="token function">id</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> LombokDemo <span class="token function">name</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> Integer <span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>id<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> String <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p><code>源码 prefix = &quot;xxx&quot;</code></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Accessors</span><span class="token punctuation">(</span>prefix <span class="token operator">=</span> <span class="token string">"xxx"</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Setter</span>
<span class="token annotation punctuation">@Getter</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LombokDemo</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> Integer xxxId<span class="token punctuation">;</span>
    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p><code>编译后 prefix = &quot;xxx&quot;</code></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> xyz<span class="token punctuation">.</span>mrwood<span class="token punctuation">.</span>study<span class="token punctuation">.</span>lombok<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LombokDemo</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> Integer xxxId<span class="token punctuation">;</span>
    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">LombokDemo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setId</span><span class="token punctuation">(</span>Integer xxxId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>xxxId <span class="token operator">=</span> xxxId<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> Integer <span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>xxxId<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>​</p>
</li>
</ul>
<hr>
<h1 id="其它注解："><a href="#其它注解：" class="headerlink" title="其它注解："></a>其它注解：</h1><h2 id="日志相关"><a href="#日志相关" class="headerlink" title="日志相关"></a>日志相关</h2><h3 id="Log4j"><a href="#Log4j" class="headerlink" title="@Log4j"></a>@Log4j</h3><ul>
<li><p><code>源码</code></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Log4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LombokDemo</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> Integer xxxId<span class="token punctuation">;</span>
    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p><code>编译后</code></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> xyz<span class="token punctuation">.</span>mrwood<span class="token punctuation">.</span>study<span class="token punctuation">.</span>lombok<span class="token punctuation">;</span>

<span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>log4j<span class="token punctuation">.</span>Logger<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LombokDemo</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> Logger log <span class="token operator">=</span> Logger<span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span>LombokDemo<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> Integer xxxId<span class="token punctuation">;</span>
    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">LombokDemo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<h3 id="CommonsLog"><a href="#CommonsLog" class="headerlink" title="@CommonsLog"></a>@CommonsLog</h3><ul>
<li><p><code>源码</code></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@CommonsLog</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LombokDemo</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> Integer xxxId<span class="token punctuation">;</span>
    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p><code>编译后</code></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> xyz<span class="token punctuation">.</span>mrwood<span class="token punctuation">.</span>study<span class="token punctuation">.</span>lombok<span class="token punctuation">;</span>

<span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>logging<span class="token punctuation">.</span>Log<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>logging<span class="token punctuation">.</span>LogFactory<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LombokDemo</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> Log log <span class="token operator">=</span> LogFactory<span class="token punctuation">.</span><span class="token function">getLog</span><span class="token punctuation">(</span>LombokDemo<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> Integer xxxId<span class="token punctuation">;</span>
    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">LombokDemo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<h3 id="Log"><a href="#Log" class="headerlink" title="@Log"></a>@Log</h3><ul>
<li><p><code>源码</code></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Log</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LombokDemo</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> Integer xxxId<span class="token punctuation">;</span>
    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p><code>编译后</code></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> xyz<span class="token punctuation">.</span>mrwood<span class="token punctuation">.</span>study<span class="token punctuation">.</span>lombok<span class="token punctuation">;</span>

<span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>logging<span class="token punctuation">.</span>Logger<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LombokDemo</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> Logger log <span class="token operator">=</span> Logger<span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span>LombokDemo<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> Integer xxxId<span class="token punctuation">;</span>
    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">LombokDemo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<h3 id="Log4j2"><a href="#Log4j2" class="headerlink" title="@Log4j2"></a>@Log4j2</h3><ul>
<li><p><code>源码</code></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Log4j2</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LombokDemo</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> Integer xxxId<span class="token punctuation">;</span>
    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p><code>编译后</code></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> xyz<span class="token punctuation">.</span>mrwood<span class="token punctuation">.</span>study<span class="token punctuation">.</span>lombok<span class="token punctuation">;</span>

<span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>logging<span class="token punctuation">.</span>log4j<span class="token punctuation">.</span>LogManager<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>logging<span class="token punctuation">.</span>log4j<span class="token punctuation">.</span>Logger<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LombokDemo</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> Logger log <span class="token operator">=</span> LogManager<span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span>LombokDemo<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> Integer xxxId<span class="token punctuation">;</span>
    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">LombokDemo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<h3 id="Slf4j"><a href="#Slf4j" class="headerlink" title="@Slf4j"></a>@Slf4j</h3><ul>
<li><p><code>源码</code></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LombokDemo</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> Integer xxxId<span class="token punctuation">;</span>
    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p><code>编译后</code></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> xyz<span class="token punctuation">.</span>mrwood<span class="token punctuation">.</span>study<span class="token punctuation">.</span>lombok<span class="token punctuation">;</span>

<span class="token keyword">import</span> org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>Logger<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>LoggerFactory<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LombokDemo</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> Logger log <span class="token operator">=</span> LoggerFactory<span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span>LombokDemo<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> Integer xxxId<span class="token punctuation">;</span>
    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">LombokDemo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<h2 id="设计模式相关"><a href="#设计模式相关" class="headerlink" title="设计模式相关"></a>设计模式相关</h2><h3 id="Builder"><a href="#Builder" class="headerlink" title="@Builder"></a>@Builder</h3><ul>
<li><p><code>功能</code></p>
<blockquote>
<p>通过建造者模块来生成bean</p>
</blockquote>
</li>
</ul>
<ul>
<li><p><code>源码</code></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Builder</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LombokDemo</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> Integer id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p><code>编译后</code></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> xyz<span class="token punctuation">.</span>mrwood<span class="token punctuation">.</span>study<span class="token punctuation">.</span>lombok<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LombokDemo</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> Integer id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>

    <span class="token function">LombokDemo</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">,</span> String name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> LombokDemo<span class="token punctuation">.</span>LombokDemoBuilder <span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">LombokDemo<span class="token punctuation">.</span>LombokDemoBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">LombokDemoBuilder</span> <span class="token punctuation">{</span>
        <span class="token keyword">private</span> Integer id<span class="token punctuation">;</span>
        <span class="token keyword">private</span> String name<span class="token punctuation">;</span>

        <span class="token function">LombokDemoBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> LombokDemo<span class="token punctuation">.</span>LombokDemoBuilder <span class="token function">id</span><span class="token punctuation">(</span>Integer id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> LombokDemo<span class="token punctuation">.</span>LombokDemoBuilder <span class="token function">name</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> LombokDemo <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">LombokDemo</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>id<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token string">"LombokDemo.LombokDemoBuilder(id="</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">+</span> <span class="token string">", name="</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">")"</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>​</p>
</li>
</ul>
<h3 id="Delegate"><a href="#Delegate" class="headerlink" title="@Delegate"></a>@Delegate</h3><ul>
<li><p><code>功能</code></p>
<blockquote>
<p>@Delegate注释的属性，会把这个属性对象的公有非静态方法合到当前类</p>
</blockquote>
</li>
<li><p><code>注意</code></p>
<blockquote>
<p>公共 非静态方法</p>
</blockquote>
</li>
<li><p><code>源码</code></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LombokDemo</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Delegate</span>
    <span class="token keyword">private</span> Integer id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p><code>编译后</code></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> xyz<span class="token punctuation">.</span>mrwood<span class="token punctuation">.</span>study<span class="token punctuation">.</span>lombok<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LombokDemo</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> Integer id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">LombokDemo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">byte</span> <span class="token function">byteValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span><span class="token function">byteValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">short</span> <span class="token function">shortValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span><span class="token function">shortValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">long</span> <span class="token function">longValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span><span class="token function">longValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">float</span> <span class="token function">floatValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span><span class="token function">floatValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">doubleValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span><span class="token function">doubleValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">compareTo</span><span class="token punctuation">(</span>Integer arg0<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>arg0<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<h2 id="工具相关"><a href="#工具相关" class="headerlink" title="工具相关"></a>工具相关</h2><h3 id="Cleanup"><a href="#Cleanup" class="headerlink" title="@Cleanup"></a>@Cleanup</h3><ul>
<li><p><code>功能</code></p>
<blockquote>
<p>关闭流</p>
</blockquote>
</li>
<li><p><code>注意</code></p>
<blockquote>
<p>关闭流的方式有点怪异，而且没有在<strong>finally</strong>里面关闭，如果出现异常的就不会关闭了</p>
</blockquote>
</li>
<li><p><code>源码</code></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LombokDemo</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> IOException <span class="token punctuation">{</span>

        <span class="token annotation punctuation">@Cleanup</span> InputStream inputStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span><span class="token string">"xxx.txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p><code>编译后</code></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> xyz<span class="token punctuation">.</span>mrwood<span class="token punctuation">.</span>study<span class="token punctuation">.</span>lombok<span class="token punctuation">;</span>

<span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>FileInputStream<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Collections<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LombokDemo</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">LombokDemo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> IOException <span class="token punctuation">{</span>
        FileInputStream inputStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span><span class="token string">"xxx.txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>Collections<span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            inputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>​</p>
</li>
</ul>
<h3 id="Synchronized"><a href="#Synchronized" class="headerlink" title="@Synchronized"></a>@Synchronized</h3><ul>
<li><p><code>功能</code></p>
<blockquote>
<p>给方法加一个同步块</p>
</blockquote>
</li>
<li><p><code>源码</code></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LombokDemo</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Synchronized</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> IOException <span class="token punctuation">{</span>

        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p><code>编译后</code></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> xyz<span class="token punctuation">.</span>mrwood<span class="token punctuation">.</span>study<span class="token punctuation">.</span>lombok<span class="token punctuation">;</span>

<span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LombokDemo</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> Object $lock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">LombokDemo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> IOException <span class="token punctuation">{</span>
        Object var1 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$lock<span class="token punctuation">;</span>
        <span class="token keyword">synchronized</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$lock<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>​</p>
</li>
</ul>
<h3 id="SneakyThrows"><a href="#SneakyThrows" class="headerlink" title="@SneakyThrows"></a>@SneakyThrows</h3><ul>
<li><p><code>功能</code></p>
<blockquote>
<p>忽略异常</p>
</blockquote>
</li>
<li><p><code>源码</code></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LombokDemo</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@SneakyThrows</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

        String s <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p><code>编译后</code></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> xyz<span class="token punctuation">.</span>mrwood<span class="token punctuation">.</span>study<span class="token punctuation">.</span>lombok<span class="token punctuation">;</span>

<span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LombokDemo</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> Object $lock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">LombokDemo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> IOException <span class="token punctuation">{</span>
        Object var1 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$lock<span class="token punctuation">;</span>
        <span class="token keyword">synchronized</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$lock<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<h3 id="NonNull"><a href="#NonNull" class="headerlink" title="@NonNull"></a>@NonNull</h3><ul>
<li><p><code>功能</code></p>
<blockquote>
<p>设置不能为空的参数</p>
</blockquote>
</li>
<li><p><code>源码</code></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LombokDemo</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> String val<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p><code>编译后</code></p>
<pre class="line-numbers language-java"><code class="language-java">  <span class="token keyword">package</span> xyz<span class="token punctuation">.</span>mrwood<span class="token punctuation">.</span>study<span class="token punctuation">.</span>lombok<span class="token punctuation">;</span>

  <span class="token keyword">import</span> lombok<span class="token punctuation">.</span>NonNull<span class="token punctuation">;</span>

  <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LombokDemo</span> <span class="token punctuation">{</span>
      <span class="token keyword">public</span> <span class="token function">LombokDemo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> String val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span><span class="token punctuation">(</span>val <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token string">"val"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="UtilityClass"><a href="#UtilityClass" class="headerlink" title="@UtilityClass"></a>@UtilityClass</h3></li>
<li><p><code>功能</code></p>
<blockquote>
<p>把普通类转为工具类</p>
</blockquote>
</li>
<li><p><code>源码</code></p>
<pre class="line-numbers language-java"><code class="language-java">    <span class="token annotation punctuation">@UtilityClass</span>
    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LombokDemo</span> <span class="token punctuation">{</span>

        <span class="token keyword">private</span> Integer id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">private</span> String name <span class="token operator">=</span> <span class="token string">"kiwi"</span><span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">util</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>

            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"xxx"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p><code>编译后</code></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> xyz<span class="token punctuation">.</span>mrwood<span class="token punctuation">.</span>study<span class="token punctuation">.</span>lombok<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">LombokDemo</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> Integer id <span class="token operator">=</span> Integer<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> String name <span class="token operator">=</span> <span class="token string">"kiwi"</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">util</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"xxx"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token function">LombokDemo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">UnsupportedOperationException</span><span class="token punctuation">(</span><span class="token string">"This is a utility class and cannot be instantiated"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>​</p>
</li>
</ul>
<p>本文地址 <a href="https://blog.coder4j.cn/2016/09/01/lombok-base/">https://blog.coder4j.cn/2016/09/01/lombok-base/</a> </p>
]]></content>
      
        
        <tags>
            
            <tag> lombok </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
